{"version":3,"sources":["webpack://react/./src/theme.ts","webpack://react/./src/context/index.ts","webpack://react/./src/hooks/useUser.ts","webpack://react/./src/hooks/useHistory.ts","webpack://react/./src/constant/layout.ts","webpack://react/./src/components/Header/Dialog.tsx","webpack://react/./src/components/Header/index.tsx","webpack://react/./src/components/SideNav/Dialog.tsx","webpack://react/./src/components/SideNav/SecondMenu.tsx","webpack://react/./src/components/SideNav/ListItems.tsx","webpack://react/./src/components/SideNav/index.tsx","webpack://react/./src/components/Chat/List/index.tsx","webpack://react/./src/api/fetch/types.d.ts","webpack://react/./src/api/fetch/createInit.ts","webpack://react/./src/api/fetch/interceptors_req.ts","webpack://react/./src/api/fetch/timeout.ts","webpack://react/./src/api/fetch/interceptors_res.ts","webpack://react/./src/api/fetch/performOfRes.ts","webpack://react/./src/api/fetch/index.ts","webpack://react/./src/api/ajax/intercept.ts","webpack://react/./src/api/common.ts","webpack://react/./src/api/ajax/index.ts","webpack://react/./src/components/Chat/Textarea/Dialog.tsx","webpack://react/./src/components/Chat/Textarea/index.tsx","webpack://react/./src/components/Chat/index.tsx","webpack://react/./src/components/Login/index.tsx","webpack://react/./src/App.tsx","webpack://react/./src/main.tsx"],"names":["createTheme","palette","primary","main","appBar","contrastText","components","MuiDrawer","styleOverrides","paper","backgroundColor","initUser","username","login","dialog","id","initGptParams","taskid","model","topicid","init","openSideNav","setOpenSideNav","user","setUser","setLoginOpen","signOut","historyMessages","setHistoryMessages","gptParams","setGptParams","select","setSelect","createContext","LOCALUSER","LOCALHISTORY","LOGO","open","close","sure","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogActions","Button","onClick","autoFocus","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","useContext","context","useState","outDialog","setOutDialog","color","Toolbar","variant","sx","pr","IconButton","edge","aria-label","marginRight","FormatIndentDecrease","FormatIndentIncrease","Typography","component","noWrap","Box","flexGrow","display","alignItems","justifyContent","Warning","position","top","ml","mr","startIcon","AccountCircle","PersonOutline","DialogContent","DialogContentText","anchorEl","handleClose","clearInterval","nodes","cleanDialog","setCleanDialog","setTopicid","Boolean","Popper","placement","onMouseEnter","onMouseLeave","TransitionProps","Fade","timeout","Paper","map","index","name","children","key","List","ListItem","ListItemText","fontWeight","fontSize","item","ListItemButton","topic","length","Divider","px","bgcolor","boxShadow","py","cursor","list","Icon","TranslateIcon","TerminalIcon","PsychologyAltIcon","setAnchorEl","currentList","setCurrentList","interval","useRef","current","setTimeout","e","childern","clearTimeout","currentTarget","handleEnter","ListItemIcon","style","SecondMenu","Drawer","whiteSpace","height","boxSizing","overflowX","spacing","breakpoints","up","mt","mb","textAlign","ListItems","Method","ResponseType","ChatListRef","useEffect","window","hljs","highlightAll","scrollTo","scrollHeight","behavior","className","ref","role","content","time","classname","Checkbox","handleCheck","dangerouslySetInnerHTML","__html","marked","parse","createInit","req","method","signal","headers","body","FormData","JSON","stringify","GET","url","parseParams","undefined","params","urlJson","symbol","interceptors_req","carryInterceptorsReq","_interceptors_req","firstReq","shift","reqErr","interceptorsRequestReject","Promise","resolve","interceptorsRequestResolve","reject","Error","controller","AbortController","timeoutInit","_timeout","abort","overtime","promises","fetch","race","interceptors_res","carryInterceptorsRes","res","_interceptors_res","firstRes","resErr","interceptorsResponseReject","interceptorsResponseResolve","setHeaders","fetchHeaders","forEach","value","performOfRes","response","contentType","get","split","status","data","json","blob","ok","error","message","code","reader","getReader","decoder","TextDecoder","stream","ReadableStream","start","pump","read","then","done","text","strs","decode","filter","v","i","val","includes","choices","delta","enqueue","cpcc_fetch","catch","err","interceptors","request","use","instance","this","postReq","Authorization","baseURL","baseURLVal","returnType","type","returnCode","returnData","apiFetch","POST","enqueueSnackbar","useSnackbar","setMessage","loading","setLoading","history","setHistory","deleteDialog","setDeleteDialog","document","addEventListener","keydown","removeEventListener","event","ctrlKey","keyCode","handleSend","preventDefault","messageUser","Date","getTime","messages","arr","push","slice","commonApi","userid","max_tokens","messagesAssistant","readerDone","finally","handleHisory","Chip","label","size","deleteIcon","Done","onDelete","Delete","TextareaAutosize","maxRows","maxLength","placeholder","onChange","target","disabled","CircularProgress","Send","_historyMessages","reverse","splice","Textarea","setUsername","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","TextField","margin","helperText","localUser","localStorage","getItem","_setUser","setItem","useUser","snackbarRef","localHistory","_setHistory","useHistory","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","preventDuplicate","autoHideDuration","action","snackbarId","closeSnackbar","Close","CssBaseline","Header","SideNav","Chat","Login","rootDom","getElementById","createRoot","render","App"],"mappings":"kRAoBA,GAAeA,E,QAAAA,GAAY,CACzBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,OAAQ,CACND,KAAM,UACNE,aAAc,SAGlBC,WAAY,CACVC,UAAW,CACTC,eAAgB,CACdC,MAAO,CACLC,gBAAiB,gBCVdC,EAAiB,CAC5BC,SAAU,GACVC,OAAO,EACPC,QAAQ,EACRC,GAAI,IAGOC,EAA2B,CACtCC,OAAQ,MACRC,MAAO,gBACPC,QAAS,WAqBLC,EAAgB,CACpBC,aAAa,EACbC,eAAgB,kBAAM,MACtBC,KAAMZ,EACNa,QAAS,kBAAM,MACfC,aAAc,kBAAM,MACpBC,QAAS,kBAAM,MACfC,gBAAiB,GACjBC,mBAAoB,kBAAM,MAC1BC,UAAWb,EACXc,aAAc,kBAAM,MACpBC,OAAQ,GACRC,UAAW,kBAAM,OAGnB,GAAeC,mBAAuBb,G,w0BChEtC,IAAMc,EAAY,O,wYCAlB,IAAMC,EAAe,W,iDCJRC,EAAO,W,8BCOpB,WAAe,GAAqD,IAAlDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAC7B,OACE,gBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,SAAS,KACTL,KAAMA,EACNM,QAASL,EACTM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,gBAACC,EAAA,EAAD,CAAa/B,GAAG,sBAAhB,WAGA,gBAACgC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAQC,QAASX,GAAjB,MACA,gBAACU,EAAA,EAAD,CAAQC,QAASV,EAAMW,WAAS,GAAhC,S,kfCDR,IAAMC,GAASC,QAAOC,IAAW,CAC/BC,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IADhBH,EAEC,gBAAGI,EAAH,EAAGA,MAAOnB,EAAV,EAAUA,KAAV,O,+VAAA,EACdoB,OAAQD,EAAMC,OAAOC,OAAS,EAC9BC,WAAYH,EAAMI,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,iBAEnC5B,GAAQ,CACV6B,WFhCuB,IEiCvBC,MAAO,eAAF,OFjCkB,IEiClB,OACLR,WAAYH,EAAMI,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASI,sBAK3C,aAAkC,I,IAAA,GACqCC,gBAAWC,GAAxEjD,EADwB,EACxBA,YAAaC,EADW,EACXA,eAAgBC,EADL,EACKA,KAAME,EADX,EACWA,aAAcC,EADzB,EACyBA,QADzB,G,GAGE6C,eAAS,G,EAHX,E,kzBAGzBC,EAHyB,KAGdC,EAHc,KAUhC,OACE,gCACE,gBAAC,EAAD,CAAQpC,KAAMhB,EAAaqD,MAAM,UAC/B,gBAACC,EAAA,EAAD,CACEC,QAAQ,QACRC,GAAI,CACFC,GAAI,SAIN,gBAACC,EAAA,EAAD,CACEC,KAAK,QACLN,MAAM,UACNO,aAAW,cACXhC,QAAS,kBAAM3B,GAAgBD,IAC/BwD,GAAI,CACFK,YAAa,SAKb7D,EAAc,gBAAC8D,EAAA,EAAD,MAA+B,gBAACC,EAAA,EAAD,OAIjD,gBAACC,EAAA,EAAD,CACEC,UAAU,KACVV,QAAQ,KACRF,MAAM,UACNa,QAAM,IAEJlE,GAAee,GAEnB,gBAACoD,EAAA,EAAD,CACEX,GAAI,CACFY,SAAU,EACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAIlB,gBAACP,EAAA,EAAD,CAAYC,UAAU,QAAO,gBAACO,EAAA,EAAD,CAAahB,GAAI,CAAEH,MAAO,UAAWoB,SAAU,WAAYC,IAAK,MAC7F,gBAACV,EAAA,EAAD,CAAYC,UAAU,OAAOT,GAAI,CAAEH,MAAO,UAAWsB,GAAI,IAAzD,OACA,gBAACX,EAAA,EAAD,CAAYC,UAAU,QAAtB,4BAGA/D,EAAKV,MACD,gCACA,gBAACwE,EAAA,EAAD,CAAYR,GAAI,CAAEoB,GAAI,IAAM1E,EAAKX,UACjC,gBAACoC,EAAA,EAAD,CAAQ6B,GAAI,CAAEH,MAAO,QAAUzB,QAAS,kBAAMwB,GAAa,IAAOyB,UAAW,gBAACC,EAAA,EAAD,OAA7E,OAEA,gBAACnD,EAAA,EAAD,CAAQ6B,GAAI,CAAEH,MAAO,QAAUzB,QAAS,kBAAMxB,GAAa,IAAOyE,UAAW,gBAACE,EAAA,EAAD,OAA7E,QAIV,gBAAC,EAAD,CAAW/D,KAAMmC,EAAWlC,MAAO,kBAAMmC,GAAa,IAAQlC,KA7D3C,WACrBb,IACA+C,GAAa,Q,mJCvCjB,YAAe,GAAqD,IAAlDpC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAC7B,OACE,gBAACC,EAAA,EAAD,CACEC,WAAS,EACTJ,KAAMA,EACNM,QAASL,EACTM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,gBAACC,EAAA,EAAD,CAAa/B,GAAG,sBAAhB,aAGA,gBAACsF,EAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAmBvF,GAAG,2BAA2B8D,GAAI,CAACH,MAAO,YAA7D,yBAIF,gBAAC3B,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAQC,QAASX,GAAjB,MACA,gBAACU,EAAA,EAAD,CAAQC,QAASV,EAAMW,WAAS,GAAhC,S,o0DCDR,gBAAe,GAAmF,IAAhFqD,EAAgF,EAAhFA,SAAUC,EAAsE,EAAtEA,YAAaC,EAAyD,EAAzDA,cAAeC,EAA0C,EAA1CA,MAA0C,GACxCrC,gBAAWC,GAA3D1C,EADwF,EACxFA,mBAAoBC,EADoE,EACpEA,UAAWC,EADyD,EACzDA,aADyD,MAG1DyC,eAAS,GAHiD,GAGzFoC,EAHyF,KAG5EC,EAH4E,WAIlErC,cAAS,IAJyD,GAIzFpD,EAJyF,KAIhF0F,EAJgF,KAM1FxE,EAAOyE,QAAQP,GAarB,OACE,gCACE,gBAACQ,EAAA,EAAD,CACEC,UAAU,cACVrD,YAAU,EACV4C,SAAUA,EACVlE,KAAMA,EACN4E,aAAcR,EACdS,aAAcV,IAEb,gBAAGW,EAAH,EAAGA,gBAAH,OACC,gBAACC,EAAA,EAAD,MAAUD,EAAV,CAA2BE,QAAS,MAClC,gBAACC,EAAA,EAAD,KAEIZ,EAAMa,KAAI,WAAqBC,GAAU,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SACjB,OACE,gBAAClC,EAAA,EAAD,CACEmC,IAAKF,EACL5C,GAAI,CACFV,MAAO,IACPzD,gBAAiB,YAGnB,gBAACkH,EAAA,EAAD,CAAMtC,UAAU,OACd,gBAACuC,EAAA,GAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACzC,EAAA,EAAD,CAAYR,GAAI,CACdkD,WAAY,IACZC,SAAU,GACVhC,GAAI,IAHN,KAKKyB,KAKPC,aAbJ,EAaIA,EAAUH,KAAI,SAACU,GACb,OACE,gBAACC,EAAA,EAAD,CAAgBP,IAAKM,EAAKR,KAAMxE,QAAS,kBA3C9CkF,EA2CgEF,EA3ChEE,MACrBvB,GAAe,QACfC,EAAWsB,GAFO,IAAGA,IA4CO,gBAAC9C,EAAA,EAAD,CAAYR,GAAI,CAAEmB,GAAI,MAAQiC,EAAKR,WAM5CD,EAASd,EAAM0B,OAAS,GAAM,gBAACC,EAAA,EAAD,eAS/C,gBAAC,GAAD,CAAahG,KAAMsE,EAAarE,MAAO,kBAAMsE,GAAe,IAAQrE,KAjErD,WACjBqE,GAAe,GACfhF,EAAmB,IACnBE,EAAa,SAAKD,GAAN,IAAiBV,kB,opDCzBjC,IAAM8G,GAAO,CACXK,GAAI,EACJ5D,MAAO,yBACP,mBAAoB,CAClB6D,QAAS,6BAEXC,UAAW,sCACXC,GAAI,IACJC,OAAQ,WAGJC,GAAO,CACX,CACElB,KAAM,KACNmB,KAAMC,KACNnB,SAAU,CACR,CACED,KAAM,OACNU,MAAO,GACPT,SAAU,CACR,CACED,KAAM,KACNU,MAAO,WAET,CACEV,KAAM,KACNU,MAAO,aAIb,CACEV,KAAM,OACNU,MAAO,GACPT,SAAU,CACR,CACED,KAAM,KACNU,MAAO,WAET,CACEV,KAAM,KACNU,MAAO,eAMjB,CACEV,KAAM,KACNmB,KAAME,KACNpB,SAAU,CACR,CACED,KAAM,KACNU,MAAO,GACPT,SAAU,CACR,CACED,KAAM,OACNU,MAAO,aAIb,CACEV,KAAM,QACNU,MAAO,GACPT,SAAU,CACR,CACED,KAAM,OACNU,MAAO,aAIb,CACEV,KAAM,OACNU,MAAO,GACPT,SAAU,CACR,CACED,KAAM,OACNU,MAAO,aAIb,CACEV,KAAM,QACNU,MAAO,GACPT,SAAU,CACR,CACED,KAAM,OACNU,MAAO,aAIb,CACEV,KAAM,KACNU,MAAO,GACPT,SAAU,CACR,CACED,KAAM,OACNU,MAAO,eAMjB,CACEV,KAAM,KACNmB,KAAMG,KACNrB,SAAU,KAKd,cAAkC,UACAnD,cAA6B,MAD7B,GACzBgC,EADyB,KACfyC,EADe,WAEMzE,cAAyB,IAF/B,GAEzB0E,EAFyB,KAEZC,EAFY,KAI1BC,GAAWC,YAA8B,MAEzC5C,EAAc,WAClB2C,EAASE,QAAUC,YAAW,WAC5BN,EAAY,MACZE,EAAe,MACd,MAaL,OACE,gCAEIP,GAAKpB,KAAI,WAA2BC,GAA3B,IAAGoB,EAAH,EAAGA,KAAMnB,EAAT,EAASA,KAAMC,EAAf,EAAeA,SAAf,OACP,gBAACG,EAAA,GAAD,CACEF,IAAKH,EACLP,aAAc,SAACsC,GAAD,OAhBJ,SAACA,EAAgDC,GAC/DL,EAASE,SAASI,aAAaN,EAASE,SACxCE,EAAEG,gBAAkBnD,GAAUyC,EAAY,MAC9CA,EAAYO,EAAEG,eACdR,EAAeM,GAYcG,CAAYJ,EAAG7B,IACpCR,aAAcV,EACd3B,GAAE,MAAOoD,KAET,gBAAC2B,EAAA,EAAD,KACE,gBAAChB,EAAD,CAAMiB,MAAO,CAAEnF,MAAO,WAExB,gBAACoD,EAAA,EAAD,CAAc5H,QAASuH,QAI7B,gBAACqC,GAAD,CAAYvD,SAAUA,EAAUC,YAAaA,EAAaC,cApBxC,kBAAM0C,EAASE,SAAWI,aAAaN,EAASE,UAoBsB3C,MAAOuC,M,6rBCvJrG,IAAMc,IAAS3G,QAAO7C,KAAW,CAAE+C,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IAAjDH,EACb,gBAAGI,EAAH,EAAGA,MAAOnB,EAAV,EAAUA,KAAV,MAAsB,CACpB,yBACEyD,SAAU,WACVkE,WAAY,SAEZ7F,MNlBqB,IMmBrB8F,OAAQ,QACRtG,WAAYH,EAAMI,YAAYC,OAAO,QAAS,CAC5CC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASI,iBAEvC8F,UAAW,eACN7H,GAAD,IACF8H,UAAW,SACXxG,WAAYH,EAAMI,YAAYC,OAAO,QAAS,CAC5CC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,gBAEvCE,MAAOX,EAAM4G,QAAQ,IACpB5G,EAAM6G,YAAYC,GAAG,MAAQ,CAC5BnG,MAAOX,EAAM4G,QAAQ,UAO/B,cAAkC,IACxB/I,GAAgBgD,gBAAWC,GAA3BjD,YAER,OACE,gBAAC,GAAD,CAAQuD,QAAQ,YAAYvC,KAAMhB,GAChC,gBAACgE,EAAA,EAAD,CAAYR,GAAI,CAAE0F,GAAI,EAAGC,GAAI,EAAGC,UAAW,SAAU/F,MAAO,QAAUE,QAAQ,KAAKU,UAAU,OAC1FlD,GAEH,gBAACiG,EAAA,EAAD,MACA,gBAACT,EAAA,EAAD,CAAMtC,UAAU,MAAMT,GAAI,CAAEoF,OAAQ,QAASnE,SAAU,aACrD,gBAAC4E,GAAD,S,gIC1CR,ICNYC,GAOAC,GDDZ,cAAkC,OACevG,gBAAWC,GAAlD3C,EADwB,EACxBA,gBAAiBI,EADO,EACPA,OAAQC,EADD,EACCA,UAE3B6I,GAAczB,YAAgC,MAgBpD,OAdA0B,gBAAU,WACRC,OAAOC,KAAKC,iBACX,KAEHH,gBAAU,WACRxB,YAAW,WAAM,MACf,UAAAuB,EAAYxB,eAAZ,SAAqB6B,SAAS,CAAEnF,IAAK8E,EAAYxB,QAAQ8B,aAAcC,SAAU,gBAElF,CAACzJ,IAOF,sBAAI0J,UAAU,YAAYC,IAAKT,GAE3BlJ,EAAgB4F,KAAI,WAA0BC,GAAU,IAAjC+D,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KAC9BC,EAAqB,cAATH,EAAuB,YAAc,GACvD,OACE,sBAAI5D,IAAK8D,EAAMJ,UAAWK,GACxB,uBAAKL,UAAU,iBACb,gBAACM,GAAA,EAAD,CAAUN,UAAU,kBAAkBxG,GAAI,CAAE,qBAAsB,CAAEmD,SAAU,KAAQ/E,QAAS,kBAZzF,SAACuE,G,MACnBxF,EAAU,GAAD,O,gDAAKD,I,+iBAAL,CAAayF,KAW2FoE,CAAYpE,MACjH,uBAAKqE,wBAAyB,CAAEC,OAAQf,OAAOgB,OAAOC,MAAMR,WAMtE,sBAAIH,UAAU,sB,0qBCxCRV,K,UAAAA,E,YAAAA,E,UAAAA,E,iBAAAA,Q,cAOAC,K,0BAAAA,E,YAAAA,E,oBAAAA,E,YAAAA,E,YAAAA,E,iBAAAA,Q,KCPL,IAAMqB,GAAa,SAACC,GAAmC,IACpDC,EAAmBD,EAAnBC,OAAQC,EAAWF,EAAXE,OACZC,EAAUH,EAAIG,QACdC,EAAOJ,EAAII,KAqBf,OAlBmBJ,EAAII,gBAAgBC,WAGrCF,E,kWAAU,EACR,eAAgB,mCACbA,GAEDC,IAAMA,EAAOE,KAAKC,UAAUH,KAI9BH,IAAWxB,GAAO+B,MAEhBJ,IAAMJ,EAAIS,KAAOC,GAAYJ,KAAKR,MAAMM,KAE5CA,OAAOO,GAGF,CAAEV,SAAQE,UAASC,OAAMF,WAQlC,SAASQ,GAAeE,GACtB,IAAIC,EAAU,IACd,GAAsB,WAAlB,GAAOD,GACT,IAAK,IAAMnF,KAAOmF,EAChB,GAA2B,WAAvB,GAAOA,EAAOnF,IAChBoF,GAAWH,GAAYE,EAAOnF,QACzB,CACL,IAAMqF,EAASD,EAAQ3E,OAAS,EAAI,IAAM,GAEtC0E,EAAOnF,KACToF,GAAWC,EAASrF,EAAM,IAAMmF,EAAOnF,IAK/C,OAAOoF,E,0HC9CF,IAAME,GAA0C,GAK1CC,GAA0C,e,EAAA,G,EAAA,yBAAG,WAAM9L,GAAN,0FAElD+L,EAFkD,UAE1BF,IAF0B,YAQjDE,EAAkB/E,OAAS,GARsB,oBAUtDgF,EAAWD,EAAkBE,QAVyB,UAahDC,EAbgD,gBAe9CF,EAASG,2BAA2BH,EAASG,0BAA0BD,GAfzB,wCAkBrCE,QAAQC,QAAQL,EAASM,2BAA2BtM,IAlBf,QAkBlDA,EAlBkD,iEAsBhDgM,EAASG,2BAA2BH,EAASG,0BAAT,MAEnCD,IAAQA,EAAS,EAAH,IAxBiC,mCA4BpDA,EA5BoD,0CA4BrCE,QAAQG,OAAO,IAAIC,MAAMN,KA5BY,iCA8BjDlM,GA9BiD,yD,iLAAH,sDC4B1CiG,GAAmB,SAACjG,EAAM8K,GAAQ,MA3Bd,SAAC9K,EAAM8K,GAAQ,IAE1C2B,EADIlB,EAAiCT,EAAjCS,IAAKP,EAA4BF,EAA5BE,OADiC,EACLF,EAApB7E,eADyB,MACf,KADe,EAS9C,OALK+E,IACHyB,EAAa,IAAIC,gBACjB1M,EAAKgL,OAASyB,EAAWzB,QAGpB,CAAEO,MAAKtF,UAASwG,cAoBcE,CAAY3M,EAAM8K,GAA/CS,EAFqC,EAErCA,IAEFqB,EAbmB,SAAC3G,EAASwG,GACnC,OAAO,IAAIL,SAAQ,SAACC,EAASE,GAC3BrE,YAAW,WACLuE,GAAYA,EAAWI,QAC3BN,EAAO,IAAIC,MAAJ,oBAAuBvG,EAAvB,mBACNA,MAQY6G,CAJ4B,EAEhC7G,QAFgC,EAEvBwG,YAIhBM,EAAW,CAACC,MAAMzB,EAAKvL,GAAO4M,GAEpC,OAAOR,QAAQa,KAAKF,I,0HCxCf,IAAMG,GAA2C,GAI3CC,GAA0C,e,EAAA,G,EAAA,yBAAG,WAAMC,GAAN,0FAElDC,EAFkD,UAE1BH,IAF0B,YAQjDG,EAAkBrG,OAAS,GARsB,oBAUtDsG,EAAWD,EAAkBpB,QAVyB,UAahDsB,EAbgD,gBAe9CD,EAASE,4BAA4BF,EAASE,2BAA2BD,GAf3B,wCAkBtCnB,QAAQC,QAAQiB,EAASG,4BAA4BL,IAlBf,QAkBlDA,EAlBkD,iEAsBhDE,EAASE,4BAA4BF,EAASE,2BAAT,MAEpCD,IAAQA,EAAS,EAAH,IAxBiC,mCA4BpDA,EA5BoD,0CA4BrCnB,QAAQG,OAAO,IAAIC,MAAMe,KA5BY,iCA8BjDH,GA9BiD,yD,iLAAH,sD,0JCDvD,IAAMM,GAAa,SAACzC,GAClB,IAAM0C,EAA6B,GAInC,OAHA1C,EAAQ2C,SAAQ,SAACC,EAAOtH,GACtBoH,EAAapH,GAAOsH,KAEfF,GASIG,GAAY,e,EAAA,G,EAAA,yBAAG,WAC1BC,GAD0B,oGAGpBC,EAAeD,EAAS9C,QAAQgD,IAAI,gBAA2BC,MACnE,KACA,GAEId,EAAqB,CACzB7B,IAAKwC,EAASxC,IACdN,QAASyC,GAAWK,EAAS9C,SAC7BkD,OAAQJ,EAASI,OACjBC,KAAM,MAXkB,KAclBJ,EAdkB,OAgBnB,qBAhBmB,OAoBnB,6BApBmB,OAwBnB,sBAxBmB,wCAiBLD,EAASM,OAjBJ,cAiBtBjB,EAAIgB,KAjBkB,oDAqBLL,EAASO,OArBJ,eAqBtBlB,EAAIgB,KArBkB,uCA0BjBL,EAASQ,GA1BQ,kCA2BIR,EAASM,OA3Bb,uBA2BZG,EA3BY,EA2BZA,MACF,IAAIhC,MAAMgC,EAAMC,SAAWD,EAAME,MA5BnB,eA8BhBC,EA9BgB,UA8BPZ,EAAS7C,YA9BF,aA8BP,EAAe0D,YAExBC,EAAU,IAAIC,YAAY,SAC1BC,EAAS,IAAIC,eAAe,CAChCC,MADgC,SAC1BxC,GACJ,OACA,SAASyC,IACP,OAAOP,aAAP,EAAOA,EAAQQ,OAAOC,MAAK,YAAqB,IAAlBC,EAAkB,EAAlBA,KAAMxB,EAAY,EAAZA,MAElC,IAAIwB,EAAJ,CAQA,IAHA,IAAIC,EAAO,GAELC,EADMV,EAAQW,OAAO3B,GACVK,MAAM,UAAUuB,QAAO,SAACC,GAAD,OAAOA,KACtCC,EAAI,EAAGA,EAAIJ,EAAKvI,OAAQ2I,IAAK,CACpC,IAAMC,EAAML,EAAKI,GACjB,GAAIC,EAAIC,SAAS,UAEf,YADApD,EAAWvL,QAGb,IAAMkN,EAAOhD,KAAKR,MAAMgF,GACxBxB,EAAK0B,QAAQ,GAAGC,MAAM3F,UACnBkF,GAAQlB,EAAK0B,QAAQ,GAAGC,MAAM3F,SAGnC,OADAqC,EAAWuD,QAAQV,GACZJ,IAlBLzC,EAAWvL,WALVgO,MA4BX9B,EAAIgB,KAAOW,EA/DW,0FAqEnB3B,GArEmB,2C,iLAAH,sD,gUCbzB,IAAM6C,GAAqB,6CAAG,WAAOnF,GAAP,6FAExB9K,EAAO6K,GAAWC,GAFM,kBAMbgB,GAAqB9L,GANR,OAM1BA,EAN0B,gFAQnBoM,QAAQG,OAAO,IAAIC,MAAJ,QARI,iCAWrB,IAAIJ,SAAuB,SAACC,EAASE,GAE5BtG,GAAQjG,EAAM8K,GACtBsE,KAAN,6CAAW,WAAMrB,GAAN,sGAEOD,GAAaC,GAFpB,cAELX,EAFK,yBAKKD,GAAqBC,GAL1B,OAKPA,EALO,gFAOAhB,QAAQG,OAAO,IAAIC,MAAJ,QAPf,QAUTH,EAAQe,GAVC,yDAAX,uDAWG8C,OAAM,SAAAC,GACP5D,EAAO4D,UA1BiB,yDAAH,sDA+B3BF,GAAWG,aAAe,CACxBC,QAAS,CACPC,IAAK,SAAChE,EAA4BH,GAChCN,QAAsB,CAAES,6BAA4BH,gCAGxD4B,SAAU,CACRuC,IAAK,SAAU7C,EAA6BD,GAC1CN,QAAsB,CAAEO,8BAA6BD,kCAK3D,UChDAyC,6BAAoC,SAACI,GACnC,OAAOA,KAITJ,8BAAqC,SAAClC,GACpC,OAAOA,KAGT,U,0jCCeIwC,GACJ,GACMA,KACJA,GAAW,I,mvBAdX,SAAKrF,GAMH,OAAOsF,KAAKC,QAAoC,CAAElF,IALtC,6CAK2CL,OAAMD,QAJ7C,CACd,eAAgB,mBAChByF,cAAe,qE,kNCfC,G,oDAAA,G,6CAEpB,YAMgC,WAL9BC,EAK8B,EAL9BA,QACApF,EAI8B,EAJ9BA,IACAN,EAG8B,EAH9BA,QACAF,EAE8B,EAF9BA,OACAG,EAC8B,EAD9BA,KAEA,OAAO,IAAIkB,SAAQ,SAACC,EAASE,GAC3B,IAAMqE,EAAaD,GAAW,EAAKA,QAEnCJ,GAAS,CACPhF,IAFFA,EAAMqF,EAAarF,EAGjBN,UACAF,SACAG,SAECkE,MAAK,SAACrB,GACL,IAAMC,EAAeD,EAAS9C,QAAQ,gBAChCmC,EAAMW,EAASK,KACfyC,EAAazD,EAAI0D,KACjBC,EAAa3D,EAAIsB,KACjBsC,EAAa5D,EAAIgB,KACvB,OAAmB,MAAf2C,EAEK1E,EAAQ2E,GACS,6BAAfH,GAGgB,sBAAhB7C,EADF3B,EAAQe,QACV,KAMR8C,OAAM,SAACC,GAAQ,MACR1B,GAAU0B,SAAA,UAAAA,EAAK/B,YAAL,eAAWK,WAAW0B,aAAtB,EAAsBA,EAAK1B,UAAWlD,EAAM,OAC5DgB,EAAO,IAAIC,MAAMiC,Y,oBAQzB,YAKgC,IAJ9BkC,EAI8B,EAJ9BA,QACApF,EAG8B,EAH9BA,IACAN,EAE8B,EAF9BA,QACAC,EAC8B,EAD9BA,KAEA,OAAOsF,KAAKS,SAAS,CAAEN,UAASpF,MAAKN,UAASF,OAAQxB,GAAO+B,IAAKJ,W,qBAMpE,YAKgC,IAJ9ByF,EAI8B,EAJ9BA,QACApF,EAG8B,EAH9BA,IACAN,EAE8B,EAF9BA,QACAC,EAC8B,EAD9BA,KAEA,OAAOsF,KAAKS,SAAS,CAAEN,UAASpF,MAAKN,UAASF,OAAQxB,GAAO2H,KAAMhG,c,0BC7DvE,YAAe,GAAqD,IAAlDjK,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAC7B,OACE,gBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,SAAS,KACTL,KAAMA,EACNM,QAASL,EACTM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,gBAACC,EAAA,EAAD,CAAa/B,GAAG,sBAAhB,YAGA,gBAACgC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAQC,QAASX,GAAjB,MACA,gBAACU,EAAA,EAAD,CAAQC,QAASV,EAAMW,WAAS,GAAhC,S,4mECNR,kBAAkC,IAExBqP,GAAoBC,UAApBD,gBAFwB,GAIkElO,gBAAWC,GAArG/C,EAJwB,EAIxBA,KAAME,EAJkB,EAIlBA,aAAcE,EAJI,EAIJA,gBAAiBC,EAJb,EAIaA,mBAAoBC,EAJjC,EAIiCA,UAAWE,EAJ5C,EAI4CA,OAAQC,EAJpD,EAIoDA,UAJpD,MAMFuC,cAAS,IANP,GAMzBsL,EANyB,KAMhB4C,EANgB,WAQFlO,eAAS,GARP,GAQzBmO,EARyB,KAQhBC,EARgB,WAUFpO,eAAS,GAVP,GAUzBqO,EAVyB,KAUhBC,EAVgB,WAYQtO,eAAS,GAZjB,GAYzBuO,EAZyB,KAYXC,EAZW,MAchCjI,gBAAU,WAER,OADAkI,SAASC,iBAAiB,UAAWC,GAC9B,kBAAMF,SAASG,oBAAoB,UAAWD,MAEpD,CAACrD,IAEJ,IAAMqD,EAAU,SAACE,GACXA,EAAMC,SAA6B,KAAlBD,EAAME,UAEzBC,IACAH,EAAMI,mBAIJD,EAAa,WACjB,IAAIb,EAAJ,CACA,IAAK7C,EAAS,OAAO0C,EAAgB,aAAc,CAAE3N,QAAS,YAC9D,IAAKrD,EAAKV,MAAO,OAAOY,GAAa,GAErCkR,GAAW,GAEX,IAAMc,EAA8B,CAAElI,KAAM,OAAQC,QAASqE,EAASpE,MAAM,IAAIiI,MAAOC,WAEjFC,EAAW,GAKjB,GAHAhS,EAAmB,GAAD,UAAKD,GAAL,CAAsB8R,KACxChB,EAAW,IAEPG,EAAS,CACX,IAAMiB,EAAMlS,EAAgBkP,QAAO,SAAA5I,GAAI,MAAkB,SAAdA,EAAKsD,QAAiBhE,KAAI,kBAAwB,CAAEgE,KAA1B,EAAGA,KAA6BC,QAAhC,EAASA,YAC9EoI,EAASE,KAAT,MAAAF,EAAQ,GAASC,EAAIE,OAAO,KAG9BC,QAAe,CACbC,OAAQ1S,EAAKR,GACb6S,SAAU,GAAF,OAAMA,EAAN,CAAgB,CAAErI,KAAM,OAAQC,QAASqE,KACjD3O,MAAOW,EAAUX,MACjBiP,QAAQ,EACR+D,WAAY,MAEX1D,KAPH,e,EAAA,G,EAAA,yBAOQ,WAAMhC,GAAN,kGACAuB,EAASvB,EAAIwB,YACbmE,EAAoC,CAAE5I,KAAM,YAAaC,QAAS,GAAIC,MAAM,IAAIiI,MAAOC,WACzFlD,GAAO,EACPjF,EAAU,GACd5J,EAAmB,GAAD,UAAKD,GAAL,CAAsB8R,EAAaU,KAL/C,UAOE1D,EAPF,iCAQsCV,EAAOQ,OAR7C,gBAQItB,EARJ,EAQIA,MAAamF,EARjB,EAQW3D,KACXxB,IACFzD,GAAWyD,EACXrN,EAAmB,GAAD,UAAKD,GAAL,CAAsB8R,EAAtB,GAAC,MAAuCU,GAAxC,IAA2D3I,gBAE/EiF,EAAO2D,EAbH,0D,iLAPR,uDAsBGC,SAAQ,WACT1B,GAAW,GACX5H,OAAOC,KAAKC,oBAIVqJ,EAAe,WAEjB/B,EADEK,EACc,wBAEA,0BAElBC,GAAYD,IAkBd,OACE,uBAAKvH,UAAU,iBACb,gBAACkJ,GAAA,EAAD,CACElJ,UAAU,uBACVzG,QAASgO,EAAU,SAAW,WAC9B4B,MAAM,OACN9P,MAAM,UACN+P,KAAK,QACLC,WAAY,gBAACC,GAAA,EAAD,MACZC,SAAUhC,EAAU0B,OAAezH,EACnC5J,QAASqR,IAEX,gBAACvP,EAAA,EAAD,CAAYsG,UAAU,uBAAuBpG,aAAW,SAASP,MAAM,QAAQzB,QA3B9D,WACG,IAAlBlB,EAAOqG,QAAcmK,EAAgB,YAAa,CAAE3N,QAAS,YACjEmO,GAAgB,KA0BZ,gBAAC8B,GAAA,EAAD,OAEF,gBAACC,GAAA,EAAD,CAAkBC,QAAQ,IAAI1J,UAAU,WAAW2J,UAAW,IAAKC,YAAY,0BAA0BhG,MAAOY,EAASqF,SAAU,SAAC3L,GAAD,OAAOkJ,EAAWlJ,EAAE4L,OAAOlG,UAC9J,gBAAClK,EAAA,EAAD,CAAYE,aAAW,SAASoG,UAAU,WAAWpI,QAASsQ,EAAY6B,SAAU1C,GACjFA,EAAU,gBAAC2C,GAAA,EAAD,CAAkBZ,KAAM,KAAS,gBAACa,GAAA,EAAD,OAE9C,gBAAC,GAAD,CAAcjT,KAAMyQ,EAAcxQ,MAAO,kBAAMyQ,GAAgB,IAAQxQ,KA7BxD,WACjB,IAAMgT,EAAmB,GAAI5T,GAC7BI,EAAOyT,UAAUxG,SAAQ,SAACxH,GACxB+N,EAAiBE,OAAOjO,EAAO,MAEjC5F,EAAmB2T,GACnBvT,EAAU,IACV+Q,GAAgB,QC1GpB,cACE,OACE,uBAAK1H,UAAU,QACb,gBAAC,GAAD,MACA,gBAACqK,GAAD,Q,i8BCFN,kBAAkC,OACQrR,gBAAWC,GAA3C/C,EADwB,EACxBA,KAAME,EADkB,EAClBA,aAAcD,EADI,EACJA,QADI,MAGA+C,cAAS,IAHT,GAGzB3D,EAHyB,KAGf+U,EAHe,WAIApR,cAAS,IAJT,GAIzBqR,EAJyB,KAIfC,EAJe,WAMUtR,eAAS,GANnB,GAMzBuR,EANyB,KAMVC,EANU,WAOUxR,eAAS,GAPnB,GAOzByR,EAPyB,KAOVC,EAPU,KAS1BzP,EAAc,kBAAM/E,GAAa,IAevC,OACE,gBAACe,EAAA,EAAD,CAAQC,WAAS,EAACJ,KAAMd,EAAKT,OAAQ6B,QAAS6D,GAC5C,gBAAC1D,EAAA,EAAD,iBACA,gBAACuD,EAAA,EAAD,KACE,gBAAC6P,GAAA,EAAD,CACEtG,MAAOkG,EACPjR,GAAI,CAAE2F,GAAI,GACVtH,WAAS,EACTiT,OAAO,QACPpV,GAAG,WACHyT,MAAM,MACN/R,WAAS,EACTmC,QAAQ,WACRqK,MAAOrO,EACPsU,SAAU,SAAC3L,GAAQoM,EAAYpM,EAAE4L,OAAOlG,OAAQ8G,GAAiB,IACjEK,WAAYN,EAAgB,SAAW,KAEzC,gBAACI,GAAA,EAAD,CACEtG,MAAOoG,EACPG,OAAO,QACPpV,GAAG,WACHyT,MAAM,KACNtC,KAAK,WACLzP,WAAS,EACTmC,QAAQ,WACRqK,MAAO2G,EACPV,SAAU,SAAC3L,GAAQsM,EAAYtM,EAAE4L,OAAOlG,OAAQgH,GAAiB,IACjEG,WAAYJ,EAAgB,QAAU,MAG1C,gBAACjT,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAQC,QAASuD,GAAjB,MACA,gBAACxD,EAAA,EAAD,CAAQC,QA7CO,WACnB,IAAKrC,IAAagV,EAGhB,OAFKhV,GAAUmV,GAAiB,QAC3BH,GAAUK,GAAiB,IAGlCzU,EAAQ,CACNZ,WACAC,OAAO,EACPC,QAAQ,MAoCN,S,i8BC5CR,kBAAkC,UAEMyD,eAAS,GAFf,GAEzBlD,EAFyB,KAEZC,EAFY,UxBdlC,WACE,I,IAAM+U,EAAYC,aAAaC,QAAQrU,GADV,G,GAEJqC,cAAe8R,EAAY,EAAH,KAAQ7J,KAAKR,MAAMqK,IAAnB,IAA+BvV,QAAQ,IAAUH,G,EAFrE,E,kzBAEtBY,EAFsB,KAEhBiV,EAFgB,KAIvBhV,EAAU,SAACD,GACf+U,aAAaG,QAAQvU,EAAWsK,KAAKC,UAAUlL,IAC/CiV,EAASjV,IAgBX,MAAO,CAACA,EAAMC,EAbO,SAACa,GACpBb,EAAQ,EAAD,KAAMD,GAAN,IAAYT,OAAQuB,MAGb,WACdb,EAAQ,CACNZ,SAAU,GACVC,OAAO,EACPC,QAAQ,EACRC,GAAI,OwBAuC2V,GAJf,GAIzBnV,EAJyB,KAInBC,EAJmB,KAIVC,EAJU,KAIIC,EAJJ,KAM1BiV,GAAcvN,YAAyB,MANb,KvBdlC,WACE,I,EAAMwN,EAAeN,aAAaC,QAAQpU,GADb,E,2iBAAA,EAEEoC,cAA0BqS,E,+CAAmBpK,KAAKR,MAAM4K,K,kRAAiB,IAF3E,GAEtBhE,EAFsB,KAEbiE,EAFa,KAS7B,MAAO,CAACjE,EALW,SAACA,GAClB0D,aAAaG,QAAQtU,EAAcqK,KAAKC,UAAUmG,IAClDiE,EAAYjE,KuBgBgCkE,GARd,GAQzBnV,EARyB,KAQRC,EARQ,WAUE2C,cAAoBvD,GAVtB,GAUzBa,EAVyB,KAUdC,EAVc,WAYJyC,cAAmB,IAZf,GAYzBxC,EAZyB,KAYjBC,EAZiB,KAchC,OACE,gBAAC,WAAD,CAAkBiN,MAAO,CACvB5N,cACAC,iBACAC,OACAC,UACAC,eACAC,UACAC,kBACAC,qBACAC,YACAC,eACAC,SACAC,cAEA,gBAAC+U,EAAA,EAAD,CAAevT,MAAOA,GACpB,gBAAC,KAAD,CACE8H,IAAKqL,EACLK,SAAU,EACVC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,kBAAkB,EAClBC,iBAAkB,IAClBC,OAAQ,SAACC,GAAD,OACN,gBAACxS,EAAA,EAAD,CAAYL,MAAM,UAAUzB,QAAS,kCAAM0T,EAAYtN,eAAlB,aAAM,EAAqBmO,cAAcD,KAC5E,gBAACE,GAAA,EAAD,SAGJ,gBAACjS,EAAA,EAAD,CAAKX,GAAI,CAAEa,QAAS,SAClB,gBAACgS,EAAA,GAAD,MACA,gBAACC,EAAD,MACA,gBAACC,GAAD,MACA,gBAACC,GAAD,OAEF,gBAACC,GAAD,UC7DJC,GAAW/E,SAASgF,eAAe,SAE5BC,OAAWF,IAEnBG,OAAO,gBAACC,GAAD,S","file":"js/main.3a921ebd.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\"\r\n\r\n\r\ndeclare module '@mui/material/styles' {\r\n  interface Palette {\r\n    appBar: Palette['primary']\r\n  }\r\n\r\n  // allow configuration using `createTheme`\r\n  interface PaletteOptions {\r\n    appBar?: PaletteOptions['primary']\r\n  }\r\n}\r\n\r\ndeclare module '@mui/material/AppBar' {\r\n  interface AppBarPropsColorOverrides {\r\n    appBar: true\r\n  }\r\n}\r\n\r\nexport default createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#6d82d0'\r\n    },\r\n    appBar: {\r\n      main: '#3f414e',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n  components: {\r\n    MuiDrawer: {\r\n      styleOverrides: {\r\n        paper: {\r\n          backgroundColor: '#000020'\r\n        }\r\n      }\r\n    },\r\n  }\r\n})","import { createContext } from 'react'\r\n\r\nexport interface User {\r\n  username: string,\r\n  login: boolean,\r\n  dialog: boolean,\r\n  id: string\r\n}\r\n\r\nexport interface HistoryMessage {\r\n  role: 'user' | 'assistant'\r\n  content: string\r\n  time: number\r\n}\r\n\r\nexport type HistoryMessages = HistoryMessage[]\r\n\r\n\r\nexport interface GptParams {\r\n  taskid: string\r\n  model: string\r\n  topicid: string\r\n}\r\n\r\nexport const initUser: User = {\r\n  username: '',\r\n  login: false,\r\n  dialog: false,\r\n  id: '',\r\n}\r\n\r\nexport const initGptParams: GptParams = {\r\n  taskid: '123',\r\n  model: 'gpt-3.5-turbo',\r\n  topicid: '1-01-01',\r\n}\r\n\r\n\r\n\r\ninterface Context {\r\n  openSideNav: boolean\r\n  setOpenSideNav: (openSideNav: boolean) => void\r\n  user: User\r\n  setUser: (user: User) => void\r\n  setLoginOpen: (open: boolean) => void\r\n  signOut: () => void\r\n  historyMessages: HistoryMessages\r\n  setHistoryMessages: (historyMessage: HistoryMessages) => void\r\n  gptParams: GptParams\r\n  setGptParams: (gptParams: GptParams) => void\r\n  select: number[]\r\n  setSelect: (select: number[]) => void\r\n}\r\n\r\n// 初始值\r\nconst init: Context = {\r\n  openSideNav: true,\r\n  setOpenSideNav: () => null,\r\n  user: initUser,\r\n  setUser: () => null,\r\n  setLoginOpen: () => null,\r\n  signOut: () => null,\r\n  historyMessages: [],\r\n  setHistoryMessages: () => null,\r\n  gptParams: initGptParams,\r\n  setGptParams: () => null,\r\n  select: [],\r\n  setSelect: () => null,\r\n}\r\n\r\nexport default createContext<Context>(init)","import { useState } from \"react\"\r\n\r\nimport { User, initUser } from '@/context'\r\n\r\ntype userUser = [User, (user: User) => void, (open: boolean) => void, () => void]\r\n\r\nconst LOCALUSER = 'user'\r\n\r\nexport default (): userUser => {\r\n  const localUser = localStorage.getItem(LOCALUSER)\r\n  const [user, _setUser] = useState<User>(localUser ? { ...JSON.parse(localUser), dialog: false } : initUser)\r\n\r\n  const setUser = (user: User) => {\r\n    localStorage.setItem(LOCALUSER, JSON.stringify(user))\r\n    _setUser(user)\r\n  }\r\n\r\n  const setLoginOpen = (open: boolean) => {\r\n    setUser({ ...user, dialog: open })\r\n  }\r\n\r\n  const signOut = () => {\r\n    setUser({\r\n      username: '',\r\n      login: false,\r\n      dialog: false,\r\n      id: '',\r\n    })\r\n  }\r\n\r\n  return [user, setUser, setLoginOpen, signOut]\r\n}","import { useState } from \"react\"\r\n\r\nimport { HistoryMessages } from '@/context'\r\n\r\ntype userUser = [HistoryMessages, (history: HistoryMessages) => void]\r\n\r\nconst LOCALHISTORY = 'historys'\r\n\r\nexport default (): userUser => {\r\n  const localHistory = localStorage.getItem(LOCALHISTORY)\r\n  const [history, _setHistory] = useState<HistoryMessages>(localHistory ? [...JSON.parse(localHistory)] : [])\r\n\r\n  const setHistory = (history: HistoryMessages) => {\r\n    localStorage.setItem(LOCALHISTORY, JSON.stringify(history))\r\n    _setHistory(history)\r\n  }\r\n\r\n  return [history, setHistory]\r\n}","export const DRAWERWIDTH = 240\r\n\r\nexport const LOGO = 'Chat GPT'","import React from 'react'\r\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material'\r\n\r\ninterface DialogProps {\r\n  open: boolean\r\n  close: () => void\r\n  sure: () => void\r\n}\r\n\r\nexport default ({ open, close, sure }: DialogProps): JSX.Element => {\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        确定退出登录？\r\n      </DialogTitle>\r\n      <DialogActions>\r\n        <Button onClick={close}>取消</Button>\r\n        <Button onClick={sure} autoFocus>\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Typography, Toolbar, IconButton, Box, AppBar as MuiAppBar, Button } from '@mui/material'\r\n\r\nimport { styled } from '@mui/material/styles'\r\n\r\nimport { DRAWERWIDTH, LOGO } from '@/constant/layout'\r\n\r\nimport context from '@/context'\r\n\r\nimport OutDialog from './Dialog'\r\n\r\nimport FormatIndentDecreaseIcon from '@mui/icons-material/FormatIndentDecrease'\r\nimport FormatIndentIncreaseIcon from '@mui/icons-material/FormatIndentIncrease'\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\r\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline'\r\nimport WarningIcon from '@mui/icons-material/Warning'\r\n\r\nimport { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar'\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n  open?: boolean\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: DRAWERWIDTH,\r\n    width: `calc(100% - ${DRAWERWIDTH}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}))\r\n\r\nexport default (): JSX.Element => {\r\n  const { openSideNav, setOpenSideNav, user, setLoginOpen, signOut } = useContext(context)\r\n\r\n  const [outDialog, setOutDialog] = useState(false)\r\n\r\n  const handleOutLogin = () => {\r\n    signOut()\r\n    setOutDialog(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar open={openSideNav} color=\"appBar\">\r\n        <Toolbar\r\n          variant=\"dense\"\r\n          sx={{\r\n            pr: '24px', // keep right padding when drawer closed\r\n          }}\r\n        >\r\n\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => setOpenSideNav(!openSideNav)}\r\n            sx={{\r\n              marginRight: '36px',\r\n            }}\r\n          >\r\n\r\n            {\r\n              openSideNav ? <FormatIndentDecreaseIcon /> : <FormatIndentIncreaseIcon />\r\n            }\r\n          </IconButton>\r\n\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n          >\r\n            {!openSideNav && LOGO}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              flexGrow: 1,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n\r\n            <Typography component=\"span\"><WarningIcon sx={{ color: '#fc8800', position: 'relative', top: 2 }} /></Typography>\r\n            <Typography component=\"span\" sx={{ color: '#ef4444', ml: 1 }}>重要：</Typography>\r\n            <Typography component=\"span\">为防止网站丢失，请按Ctrl+D收藏本站为书签</Typography>\r\n          </Box>\r\n          {\r\n            user.login\r\n              ? <>\r\n                <Typography sx={{ mr: 1 }}>{user.username}</Typography>\r\n                <Button sx={{ color: '#fff' }} onClick={() => setOutDialog(true)} startIcon={<AccountCircleIcon />} >退出</Button>\r\n              </>\r\n              : <Button sx={{ color: '#fff' }} onClick={() => setLoginOpen(true)} startIcon={<PersonOutlineIcon />} >登录</Button>\r\n          }\r\n        </Toolbar>\r\n      </AppBar >\r\n      <OutDialog open={outDialog} close={() => setOutDialog(false)} sure={handleOutLogin} />\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material'\r\n\r\ninterface DialogProps {\r\n  open: boolean\r\n  close: () => void\r\n  sure: () => void\r\n}\r\n\r\nexport default ({ open, close, sure }: DialogProps): JSX.Element => {\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        是否重新发起会话？\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\" sx={{color: '#d32f2f'}}>\r\n          当前页面内容会被清空，请注意保存关键数据\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={close}>取消</Button>\r\n        <Button onClick={sure} autoFocus>\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useContext } from 'react'\r\n\r\n\r\nimport { Popper, Fade, Paper, Box, List, ListItem, ListItemText, ListItemButton, Divider, Typography } from '@mui/material'\r\n\r\nimport context from '@/context'\r\n\r\nimport CleanDialog from './Dialog'\r\n\r\n\r\ninterface SecondMenuItem {\r\n  name: string\r\n  topic: string\r\n  children?: SecondMenuItem[]\r\n}\r\n\r\n\r\nexport type SecondMenuData = SecondMenuItem[]\r\n\r\ninterface SecondMenuProps {\r\n  anchorEl: HTMLElement | null\r\n  nodes: SecondMenuData\r\n  handleClose: () => void\r\n  clearInterval: () => void\r\n}\r\n\r\n\r\nexport default ({ anchorEl, handleClose, clearInterval, nodes }: SecondMenuProps): JSX.Element => {\r\n  const { setHistoryMessages, gptParams, setGptParams } = useContext(context)\r\n\r\n  const [cleanDialog, setCleanDialog] = useState(false)\r\n  const [topicid, setTopicid] = useState('')\r\n\r\n  const open = Boolean(anchorEl)\r\n\r\n  const handleSure = () => {\r\n    setCleanDialog(false)\r\n    setHistoryMessages([])\r\n    setGptParams({ ...gptParams, topicid })\r\n  }\r\n\r\n  const handleTopic = ({ topic }: SecondMenuItem) => {\r\n    setCleanDialog(true)\r\n    setTopicid(topic)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Popper\r\n        placement=\"right-start\"\r\n        transition\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onMouseEnter={clearInterval}\r\n        onMouseLeave={handleClose}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              {\r\n                nodes.map(({ name, children }, index) => {\r\n                  return (\r\n                    <Box\r\n                      key={name}\r\n                      sx={{\r\n                        width: 200,\r\n                        backgroundColor: '#f7f7f8',\r\n                      }}\r\n                    >\r\n                      <List component=\"nav\">\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography sx={{\r\n                              fontWeight: 700,\r\n                              fontSize: 18,\r\n                              ml: 2,\r\n                            }}>\r\n                              • {name}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        {\r\n                          children?.map((item) => {\r\n                            return (\r\n                              <ListItemButton key={item.name} onClick={() => handleTopic(item)}>\r\n                                <Typography sx={{ ml: 3.4 }}>{item.name}</Typography>\r\n                              </ListItemButton>\r\n                            )\r\n                          })\r\n                        }\r\n                      </List>\r\n                      {index < (nodes.length - 1) && <Divider />}\r\n                    </Box>\r\n                  )\r\n                })\r\n              }\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <CleanDialog open={cleanDialog} close={() => setCleanDialog(false)} sure={handleSure} />\r\n    </>\r\n  )\r\n}\r\n","\r\nimport React, { useState, useRef } from 'react'\r\n\r\nimport { ListItem, ListItemIcon, ListItemText } from '@mui/material'\r\n\r\nimport SecondMenu from './SecondMenu'\r\n\r\nimport TranslateIcon from '@mui/icons-material/Translate'\r\nimport TerminalIcon from '@mui/icons-material/Terminal'\r\nimport PsychologyAltIcon from '@mui/icons-material/PsychologyAlt'\r\n\r\nimport type { SecondMenuData } from './SecondMenu'\r\n\r\nconst item = {\r\n  px: 3,\r\n  color: 'rgba(255, 255, 255, 1)',\r\n  '&:hover, &:focus': {\r\n    bgcolor: 'rgba(255, 255, 255, 0.08)',\r\n  },\r\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\r\n  py: 1.5,\r\n  cursor: 'pointer'\r\n}\r\n\r\nconst list = [\r\n  {\r\n    name: '教育',\r\n    Icon: TranslateIcon,\r\n    children: [\r\n      {\r\n        name: '英语助手',\r\n        topic: '',\r\n        children: [\r\n          {\r\n            name: '翻译',\r\n            topic: '1-01-01',\r\n          },\r\n          {\r\n            name: '改写',\r\n            topic: '1-01-02',\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: '中文助手',\r\n        topic: '',\r\n        children: [\r\n          {\r\n            name: '翻译',\r\n            topic: '1-02-01',\r\n          },\r\n          {\r\n            name: '改写',\r\n            topic: '1-02-02',\r\n          },\r\n        ]\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: '编程',\r\n    Icon: TerminalIcon,\r\n    children: [\r\n      {\r\n        name: '通用',\r\n        topic: '',\r\n        children: [\r\n          {\r\n            name: '代码审查',\r\n            topic: '2-01-01',\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: '服务端开发',\r\n        topic: '',\r\n        children: [\r\n          {\r\n            name: '代码提示',\r\n            topic: '2-02-01',\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: '前端开发',\r\n        topic: '',\r\n        children: [\r\n          {\r\n            name: '代码提示',\r\n            topic: '2-03-01',\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: '移动端开发',\r\n        topic: '',\r\n        children: [\r\n          {\r\n            name: '代码提示',\r\n            topic: '2-04-01',\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        name: '算法',\r\n        topic: '',\r\n        children: [\r\n          {\r\n            name: '代码提示',\r\n            topic: '2-05-01',\r\n          },\r\n        ]\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: '内容',\r\n    Icon: PsychologyAltIcon,\r\n    children: [],\r\n  },\r\n]\r\n\r\n\r\nexport default (): JSX.Element => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\r\n  const [currentList, setCurrentList] = useState<SecondMenuData>([])\r\n\r\n  const interval = useRef<NodeJS.Timeout | null>(null)\r\n\r\n  const handleClose = () => {\r\n    interval.current = setTimeout(() => {\r\n      setAnchorEl(null)\r\n      setCurrentList([])\r\n    }, 100)\r\n  }\r\n\r\n  const handleEnter = (e: React.MouseEvent<HTMLLIElement, MouseEvent>, childern: SecondMenuData) => {\r\n    if (interval.current) clearTimeout(interval.current)\r\n    if (e.currentTarget !== anchorEl) setAnchorEl(null)\r\n    setAnchorEl(e.currentTarget)\r\n    setCurrentList(childern)\r\n  }\r\n\r\n  const clearInterval = () => interval.current && clearTimeout(interval.current)\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        list.map(({ Icon, name, children }, index) => (\r\n          <ListItem\r\n            key={index}\r\n            onMouseEnter={(e) => handleEnter(e, children)}\r\n            onMouseLeave={handleClose}\r\n            sx={{ ...item }}\r\n          >\r\n            <ListItemIcon>\r\n              <Icon style={{ color: '#fff' }} />\r\n            </ListItemIcon>\r\n            <ListItemText primary={name} />\r\n          </ListItem>\r\n        ))\r\n      }\r\n      <SecondMenu anchorEl={anchorEl} handleClose={handleClose} clearInterval={clearInterval} nodes={currentList} />\r\n    </>\r\n  )\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { Divider, List, Typography, Drawer as MuiDrawer } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\nimport { DRAWERWIDTH, LOGO } from '@/constant/layout'\r\n\r\nimport context from '@/context'\r\n\r\nimport ListItems from './ListItems'\r\n\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    '& .MuiDrawer-paper': {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      // backgroundColor: '#202123',\r\n      width: DRAWERWIDTH,\r\n      height: '100vh',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      boxSizing: 'border-box',\r\n      ...(!open && {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(0),\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(0),\r\n        },\r\n      }),\r\n    },\r\n  }),\r\n)\r\n\r\nexport default (): JSX.Element => {\r\n  const { openSideNav } = useContext(context)\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" open={openSideNav}>\r\n      <Typography sx={{ mt: 2, mb: 2, textAlign: 'center', color: '#fff' }} variant=\"h6\" component=\"div\">\r\n        {LOGO}\r\n      </Typography>\r\n      <Divider />\r\n      <List component=\"nav\" sx={{ height: '100vh', position: 'relative' }} >\r\n        <ListItems />\r\n      </List>\r\n    </Drawer>\r\n  )\r\n}","import React, { useContext, useRef, useEffect } from 'react'\r\n\r\nimport { Checkbox } from '@mui/material'\r\n\r\nimport context from '@/context'\r\n\r\nimport './index.less'\r\n\r\nexport default (): JSX.Element => {\r\n  const { historyMessages, select, setSelect } = useContext(context)\r\n\r\n  const ChatListRef = useRef<HTMLUListElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    window.hljs.highlightAll()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      ChatListRef.current?.scrollTo({ top: ChatListRef.current.scrollHeight, behavior: \"smooth\" })\r\n    })\r\n  }, [historyMessages])\r\n\r\n  const handleCheck = (index: number) => {\r\n    setSelect([...select, index])\r\n  }\r\n\r\n  return (\r\n    <ul className='chat_list' ref={ChatListRef}>\r\n      {\r\n        historyMessages.map(({ role, content, time }, index) => {\r\n          const classname = role === 'assistant' ? 'assistant' : ''\r\n          return (\r\n            <li key={time} className={classname}>\r\n              <div className='chat_list_box' >\r\n                <Checkbox className='chat_list_check' sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} onClick={() => handleCheck(index)} />\r\n                <div dangerouslySetInnerHTML={{ __html: window.marked.parse(content) }}></div>\r\n              </div>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n      <li className='chat_list_stack'></li>\r\n    </ul>\r\n  )\r\n}","\r\n\r\nexport enum Method {\r\n  'GET' = 'GET',\r\n  'POST' = 'POST',\r\n  'PUT' = 'PUT',\r\n  'DELETE' = 'DELETE',\r\n}\r\n\r\nexport enum ResponseType {\r\n  'arraybuffer' = 'arraybuffer',\r\n  'blob' = 'blob',\r\n  'document' = 'document',\r\n  'json' = 'json',\r\n  'text' = 'text',\r\n  'stream' = 'stream',\r\n}\r\n\r\nexport type FetchHeaders = Record<string, string>\r\nexport interface ApiFetchRequest {\r\n  baseURL?: string\r\n  url: string\r\n  headers?: Record<string, string>\r\n  method?: Method\r\n  // body?: BodyInit | null\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  body?: any\r\n  signal?: AbortSignal\r\n}\r\n\r\nexport interface FetchRequest extends RequestInit {\r\n  url: string\r\n  timeout?: number\r\n}\r\nexport interface FetchResponse {\r\n  url: string\r\n  headers: FetchHeaders\r\n  status: number\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  data: any\r\n}\r\n\r\nexport interface CustomResponse<T> {\r\n  code: number // 返回状态码\r\n  data: T // 返回数据\r\n  message: string // 返回提示信息\r\n}\r\n\r\nexport type DataType = {\r\n  [key: string]: unknown\r\n}\r\n\r\nexport type InterceptorsRequestResolve = (request: RequestInit) => RequestInit | Promise<RequestInit>\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type InterceptorsRequestReject = (error: any) => any\r\n\r\nexport type InterceptorsRequest = {\r\n  interceptorsRequestResolve: InterceptorsRequestResolve\r\n  interceptorsRequestReject?: InterceptorsRequestReject\r\n}\r\n\r\nexport type InterceptorsResponseResolve = (response: FetchResponse) => FetchResponse\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type InterceptorsResponseReject = (error: any) => any\r\n\r\nexport type InterceptorsResponse = {\r\n  interceptorsResponseResolve: InterceptorsResponseResolve\r\n  interceptorsResponseReject?: InterceptorsResponseReject\r\n}\r\n\r\nexport type Interceptors = {\r\n  request: {\r\n    use: (interceptorsRequestResolve: InterceptorsRequestResolve, interceptorsRequestReject?: InterceptorsRequestReject) => void\r\n  },\r\n  response: {\r\n    use: (interceptorsResponseResolve: InterceptorsResponseResolve, interceptorsResponseReject?: InterceptorsResponseReject) => void\r\n  },\r\n}\r\n\r\nexport interface CpccFetch {\r\n  (req: FetchRequest): Promise<FetchResponse>\r\n  interceptors: Interceptors\r\n}\r\n\r\nexport type TimeoutInit = (init: RequestInit, req: FetchRequest) => ({\r\n  url: string,\r\n  timeout: number,\r\n  controller: AbortController | undefined\r\n})\r\n\r\nexport type Timeout = (init: RequestInit, req: FetchRequest) => Promise<Response>\r\n\r\nexport type Overtime = (timeout: number, controller: AbortController | undefined) => Promise<Response>\r\n","import { FetchRequest, Method } from './types.d'\r\n\r\nexport const createInit = (req: FetchRequest): RequestInit => {\r\n  const { method, signal } = req\r\n  let headers = req.headers\r\n  let body = req.body\r\n\r\n  // 是否FormData\r\n  const isFormData = req.body instanceof FormData\r\n  // 不是FormData时，处理headers、body\r\n  if (!isFormData) {\r\n    headers = {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n      ...headers,\r\n    }\r\n    if (body) body = JSON.stringify(body)\r\n  }\r\n\r\n  // 处理get\r\n  if (method === Method.GET) {\r\n    // get请求时，请求地址添加参数，并清空原body内容\r\n    if (body) req.url += parseParams(JSON.parse(body as string))\r\n    // 清空原body内容(get请求不能有body体)\r\n    body = undefined\r\n  }\r\n\r\n  return { method, headers, body, signal }\r\n}\r\n\r\n/**\r\n * 格式化url传参格式\r\n * @param params 需要传入的参数\r\n * @returns 返回格式化后的字符串\r\n */\r\nfunction parseParams<T>(params: T): string {\r\n  let urlJson = '?'\r\n  if (typeof params === 'object') {\r\n    for (const key in params) {\r\n      if (typeof params[key] === 'object') {\r\n        urlJson += parseParams(params[key])\r\n      } else {\r\n        const symbol = urlJson.length > 1 ? '&' : ''\r\n        // 非空时才添加\r\n        if (params[key]) {\r\n          urlJson += symbol + key + '=' + params[key]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return urlJson\r\n}\r\n","import { InterceptorsRequest } from './types.d'\r\n\r\n// 定义用来存储拦截请求的处理函数集合\r\nexport const interceptors_req: InterceptorsRequest[] = []\r\n\r\ntype CarryInterceptorsReq = (init: RequestInit) => Promise<RequestInit>\r\n\r\n// 执行请求前的拦截器\r\nexport const carryInterceptorsReq: CarryInterceptorsReq = async init => {\r\n  // 创建私有的拦截器集合\r\n  const _interceptors_req = [...interceptors_req]\r\n  // 第一个拦截器\r\n  let firstReq: InterceptorsRequest\r\n  // 请求错误信息\r\n  let reqErr: string | undefined\r\n\r\n  while (_interceptors_req.length > 0) {\r\n    // 当请求拦截器有值时，获取当前第一个拦截器\r\n    firstReq = _interceptors_req.shift() as InterceptorsRequest\r\n    // 开始尝试调用拦截器\r\n    try {\r\n      if (reqErr) {\r\n        // 当有请求错误信息时，直接调用error的方法\r\n        if (firstReq.interceptorsRequestReject) firstReq.interceptorsRequestReject(reqErr)\r\n      } else {\r\n        // 获取当前拦截器返回的init\r\n        init = await Promise.resolve(firstReq.interceptorsRequestResolve(init))\r\n      }\r\n    } catch (error) {\r\n      // 失败时，有reject函数时调用，并把error传出去\r\n      if (firstReq.interceptorsRequestReject) firstReq.interceptorsRequestReject(error)\r\n      // 请求错误信息没有值的时候为其赋值\r\n      if (!reqErr) reqErr = error as string\r\n    }\r\n  }\r\n  // 当有请求错误信息时，返回reject\r\n  if (reqErr) return Promise.reject(new Error(reqErr))\r\n  // 拦截器成功时，返回更改后的init\r\n  return init\r\n}\r\n","\r\nimport { Timeout, TimeoutInit, Overtime } from './types.d'\r\n\r\n/**\r\n * 超时需要用到的数据\r\n * @param init fetch的选项\r\n * @param req 私有fetch入参\r\n * @returns url：接口地址；timeout：超时时间；controller：接口控制器\r\n */\r\nconst timeoutInit: TimeoutInit = (init, req) => {\r\n  const { url, signal, timeout = 16000 } = req\r\n  let controller: AbortController | undefined\r\n\r\n  if (!signal) {\r\n    controller = new AbortController()\r\n    init.signal = controller.signal\r\n  }\r\n\r\n  return { url, timeout, controller }\r\n}\r\n\r\n/**\r\n * 超时方法\r\n * @param timeout 超时时间\r\n * @param controller 接口控制器\r\n * @returns\r\n */\r\nconst overtime: Overtime = (timeout, controller) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (controller) controller.abort()\r\n      reject(new Error(`timeout of${timeout}ms exceeded`))\r\n    }, timeout)\r\n  })\r\n}\r\n\r\nexport const timeout: Timeout = (init, req) => {\r\n  // 获取url和接口控制器\r\n  const { url, timeout, controller } = timeoutInit(init, req)\r\n  // 超时方法\r\n  const _timeout = overtime(timeout, controller)\r\n\r\n  const promises = [fetch(url, init), _timeout]\r\n\r\n  return Promise.race(promises)\r\n}\r\n","\r\nimport { InterceptorsResponse, FetchResponse } from './types.d'\r\n\r\n// 定义用来拦截响应结果的处理函数集合\r\nexport const interceptors_res: InterceptorsResponse[] = []\r\n\r\ntype CarryInterceptorsRes = (init: FetchResponse) => Promise<FetchResponse>\r\n\r\nexport const carryInterceptorsRes: CarryInterceptorsRes = async res => {\r\n  // 创建私有的拦截器集合\r\n  const _interceptors_res = [...interceptors_res]\r\n  // 第一个拦截器\r\n  let firstRes: InterceptorsResponse\r\n  // 返回结果错误信息\r\n  let resErr: string | undefined\r\n\r\n  while (_interceptors_res.length > 0) {\r\n    // 当请求拦截器有值时，获取当前第一个拦截器\r\n    firstRes = _interceptors_res.shift() as InterceptorsResponse\r\n    // 开始尝试调用拦截器\r\n    try {\r\n      if (resErr) {\r\n        // 当有返回结果错误信息时，直接调用error的方法\r\n        if (firstRes.interceptorsResponseReject) firstRes.interceptorsResponseReject(resErr)\r\n      } else {\r\n        // 获取当前拦截器返回的init\r\n        res = await Promise.resolve(firstRes.interceptorsResponseResolve(res))\r\n      }\r\n    } catch (error) {\r\n      // 失败时，有reject函数时调用，并把error传出去\r\n      if (firstRes.interceptorsResponseReject) firstRes.interceptorsResponseReject(error)\r\n      // 返回结果错误信息没有值的时候为其赋值\r\n      if (!resErr) resErr = error as string\r\n    }\r\n  }\r\n  // 当有返回结果错误信息时，返回reject\r\n  if (resErr) return Promise.reject(new Error(resErr))\r\n  // 拦截器成功时，返回更改后的init\r\n  return res\r\n}\r\n","import { FetchHeaders, FetchResponse } from './types.d'\r\n\r\n/**\r\n * 设置headers\r\n * @param headers 原生的Headers\r\n * @returns 自定义Headers对象\r\n */\r\nconst setHeaders = (headers: Headers): FetchHeaders => {\r\n  const fetchHeaders: FetchHeaders = {}\r\n  headers.forEach((value, key) => {\r\n    fetchHeaders[key] = value\r\n  })\r\n  return fetchHeaders\r\n}\r\n\r\n/**\r\n * 预设\r\n * @param response 原生的Response\r\n * @returns 自定义Response对象\r\n *\r\n */\r\nexport const performOfRes = async (\r\n  response: Response\r\n): Promise<FetchResponse> => {\r\n  const contentType = (response.headers.get('Content-Type') as string).split(\r\n    ';'\r\n  )[0]\r\n\r\n  const res: FetchResponse = {\r\n    url: response.url,\r\n    headers: setHeaders(response.headers),\r\n    status: response.status,\r\n    data: null,\r\n  }\r\n\r\n  switch (contentType) {\r\n    // json类型\r\n    case 'application/json':\r\n      res.data = await response.json()\r\n      break\r\n    // 下载\r\n    case 'application/octet-stream':\r\n      res.data = await response.blob()\r\n      break\r\n    // 流\r\n    case 'text/event-stream':\r\n      // res.data = response.body?.getReader()\r\n      if (!response.ok) {\r\n        const { error } = await response.json()\r\n        throw new Error(error.message || error.code)\r\n      }\r\n      const reader = response.body?.getReader()\r\n\r\n      const decoder = new TextDecoder(\"utf-8\")\r\n      const stream = new ReadableStream({\r\n        start(controller) {\r\n          return pump()\r\n          function pump(): Promise<ReadableStream<Uint8Array> | undefined> | undefined {\r\n            return reader?.read().then(({ done, value }) => {\r\n\r\n              if (done) {\r\n                controller.close()\r\n                return\r\n              }\r\n\r\n              let text = \"\"\r\n              const str = decoder.decode(value)\r\n              const strs = str.split(\"data: \").filter((v) => v)\r\n              for (let i = 0; i < strs.length; i++) {\r\n                const val = strs[i]\r\n                if (val.includes(\"[DONE]\")) {\r\n                  controller.close()\r\n                  return\r\n                }\r\n                const data = JSON.parse(val)\r\n                data.choices[0].delta.content &&\r\n                  (text += data.choices[0].delta.content)\r\n              }\r\n              controller.enqueue(text)\r\n              return pump()\r\n            })\r\n          }\r\n        },\r\n      })\r\n      res.data = stream\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  return res\r\n}\r\n","import { CpccFetch, FetchResponse } from './types.d'\r\nimport { createInit } from './createInit'\r\nimport { interceptors_req, carryInterceptorsReq } from './interceptors_req'\r\nimport { timeout } from './timeout'\r\nimport { interceptors_res, carryInterceptorsRes } from './interceptors_res'\r\nimport { performOfRes } from './performOfRes'\r\n\r\n// 定义要获取的资源。这可能是：一个 USVString 字符串，包含要获取资源的 URL。一些浏览器会接受 blob: 和 data: 作为 schemes.一个 Request 对象。\r\nconst cpcc_fetch: CpccFetch = async (req) => {\r\n  // 创建fetch入参\r\n  let init = createInit(req)\r\n\r\n  // interceptors_req是拦截请求的拦截处理函数集合\r\n  try {\r\n    init = await carryInterceptorsReq(init)\r\n  } catch (error) {\r\n    return Promise.reject(new Error(error as string))\r\n  }\r\n\r\n  return new Promise<FetchResponse>((resolve, reject) => {\r\n    // 设置超时\r\n    const fetch = timeout(init, req)\r\n    fetch.then(async response => {\r\n      // 通过预设获取自定义类型的Response\r\n      let res = await performOfRes(response)\r\n      // interceptors_res是拦截响应结果的拦截处理函数集合\r\n      try {\r\n        res = await carryInterceptorsRes(res)\r\n      } catch (error) {\r\n        return Promise.reject(new Error(error as string))\r\n      }\r\n      // 将拦截器处理后的响应结果resolve出去\r\n      resolve(res)\r\n    }).catch(err => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n\r\ncpcc_fetch.interceptors = {\r\n  request: {\r\n    use: (interceptorsRequestResolve, interceptorsRequestReject?) => {\r\n      interceptors_req.push({ interceptorsRequestResolve, interceptorsRequestReject })\r\n    }\r\n  },\r\n  response: {\r\n    use: function (interceptorsResponseResolve, interceptorsResponseReject) {\r\n      interceptors_res.push({ interceptorsResponseResolve, interceptorsResponseReject })\r\n    }\r\n  }\r\n}\r\n\r\nexport default cpcc_fetch\r\n","import cpcc_fetch from '@/api/fetch'\r\n\r\n\r\n// 添加一个请求拦截器\r\ncpcc_fetch.interceptors.request.use((request) => {\r\n  return request\r\n})\r\n\r\n// 添加一个响应拦截器\r\ncpcc_fetch.interceptors.response.use((response) => {\r\n  return response\r\n})\r\n\r\nexport default cpcc_fetch\r\n","\r\n\r\n/***\r\n * @description 公用API\r\n */\r\n\r\nimport Abstract from '@/api/ajax/index'\r\n\r\n// import { API_HOST } from '@/api/config'\r\n\r\nclass Common extends Abstract {\r\n  // baseURL = API_HOST\r\n\r\n  /**\r\n   * gpt\r\n   * @returns\r\n   */\r\n  chat(body: unknown) {\r\n    const url = 'https://api.openai.com/v1/chat/completions'\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer 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`,\r\n    }\r\n    return this.postReq<ReadableStream<Uint8Array>>({ url, body, headers })\r\n  }\r\n}\r\n\r\n// 单列模式返回对象\r\nlet instance\r\nexport default (() => {\r\n  if (instance) return instance\r\n  instance = new Common()\r\n  return instance\r\n})()\r\n","\r\nimport instance from './intercept'\r\nimport { ApiFetchRequest, Method } from '@/api/fetch/types.d'\r\n\r\n\r\nclass Abstract {\r\n  protected baseURL = ''\r\n\r\n  private apiFetch<T>({\r\n    baseURL,\r\n    url,\r\n    headers,\r\n    method,\r\n    body,\r\n  }: ApiFetchRequest): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      const baseURLVal = baseURL || this.baseURL\r\n      url = baseURLVal + url\r\n      instance({\r\n        url,\r\n        headers,\r\n        method,\r\n        body,\r\n      })\r\n        .then((response) => {\r\n          const contentType = (response.headers['content-type'] as string)\r\n          const res = response.data\r\n          const returnType = res.type\r\n          const returnCode = res.code\r\n          const returnData = res.data\r\n          if (returnCode === 200) {\r\n            // 成功\r\n            return resolve(returnData)\r\n          } else if (returnType === 'application/octet-stream') {\r\n            // 成功\r\n            return resolve(res)\r\n          } else if (contentType === 'text/event-stream') {\r\n            return resolve(res)\r\n          } else {\r\n           \r\n          }\r\n        })\r\n        .catch((err) => {\r\n          const message = err?.data?.message || err?.message || url + '请求失败'\r\n          reject(new Error(message))\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * GET类型的网络请求\r\n   */\r\n  protected getReq<T>({\r\n    baseURL,\r\n    url,\r\n    headers,\r\n    body,\r\n  }: ApiFetchRequest): Promise<T> {\r\n    return this.apiFetch({ baseURL, url, headers, method: Method.GET, body })\r\n  }\r\n\r\n  /**\r\n   * POST类型的网络请求\r\n   */\r\n  protected postReq<T>({\r\n    baseURL,\r\n    url,\r\n    headers,\r\n    body,\r\n  }: ApiFetchRequest): Promise<T> {\r\n    return this.apiFetch({ baseURL, url, headers, method: Method.POST, body })\r\n  }\r\n}\r\n\r\nexport default Abstract\r\n","import React from 'react'\r\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material'\r\n\r\ninterface DialogProps {\r\n  open: boolean\r\n  close: () => void\r\n  sure: () => void\r\n}\r\n\r\nexport default ({ open, close, sure }: DialogProps): JSX.Element => {\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        确定要删除聊天？\r\n      </DialogTitle>\r\n      <DialogActions>\r\n        <Button onClick={close}>取消</Button>\r\n        <Button onClick={sure} autoFocus>\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useContext, useEffect } from 'react'\r\n\r\nimport { TextareaAutosize, IconButton, CircularProgress, Chip } from '@mui/material'\r\n\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { commonApi } from '@/api'\r\n\r\nimport context, { HistoryMessage } from '@/context'\r\n\r\nimport DeleteDialog from './Dialog'\r\n\r\nimport SendIcon from '@mui/icons-material/Send'\r\nimport DoneIcon from '@mui/icons-material/Done'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\n\r\nimport './index.less'\r\n\r\nexport default (): JSX.Element => {\r\n\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const { user, setLoginOpen, historyMessages, setHistoryMessages, gptParams, select, setSelect } = useContext(context)\r\n\r\n  const [message, setMessage] = useState('')\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [history, setHistory] = useState(true)\r\n\r\n  const [deleteDialog, setDeleteDialog] = useState(false)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", keydown)\r\n    return () => document.removeEventListener('keydown', keydown)\r\n\r\n  }, [message])\r\n\r\n  const keydown = (event: KeyboardEvent) => {\r\n    if (event.ctrlKey && event.keyCode === 13) {\r\n      // ctrl + return 手动触发发送\r\n      handleSend()\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const handleSend = () => {\r\n    if (loading) return\r\n    if (!message) return enqueueSnackbar('请输入要发送的消息!', { variant: 'warning' })\r\n    if (!user.login) return setLoginOpen(true)\r\n\r\n    setLoading(true)\r\n\r\n    const messageUser: HistoryMessage = { role: 'user', content: message, time: new Date().getTime() }\r\n\r\n    const messages = []\r\n\r\n    setHistoryMessages([...historyMessages, messageUser])\r\n    setMessage('')\r\n\r\n    if (history) {\r\n      const arr = historyMessages.filter(item => item.role === 'user').map(({ role, content }) => ({ role, content }))\r\n      messages.push(...arr.slice(-3))\r\n    }\r\n\r\n    commonApi.chat({\r\n      userid: user.id,\r\n      messages: [...messages, { role: 'user', content: message }],\r\n      model: gptParams.model,\r\n      stream: true,\r\n      max_tokens: 1000,\r\n      // ...gptParams\r\n    }).then(async res => {\r\n      const reader = res.getReader()\r\n      const messagesAssistant: HistoryMessage = { role: 'assistant', content: '', time: new Date().getTime() }\r\n      let done = false\r\n      let content = ''\r\n      setHistoryMessages([...historyMessages, messageUser, messagesAssistant])\r\n\r\n      while (!done) {\r\n        const { value, done: readerDone } = await reader.read()\r\n        if (value) {\r\n          content += value\r\n          setHistoryMessages([...historyMessages, messageUser, { ...messagesAssistant, content }])\r\n        }\r\n        done = readerDone\r\n      }\r\n    }).finally(() => {\r\n      setLoading(false)\r\n      window.hljs.highlightAll()\r\n    })\r\n  }\r\n\r\n  const handleHisory = () => {\r\n    if (history) {\r\n      enqueueSnackbar('当前模式下，发送消息不会携带之前的聊天记录')\r\n    } else {\r\n      enqueueSnackbar('当前模式下，发送消息会携带之前的三条聊天记录')\r\n    }\r\n    setHistory(!history)\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (select.length === 0) enqueueSnackbar('请勾选要删除的数据', { variant: 'warning' })\r\n    setDeleteDialog(true)\r\n  }\r\n\r\n  const deleteChat = () => {\r\n    const _historyMessages = [...historyMessages]\r\n    select.reverse().forEach((index) => {\r\n      _historyMessages.splice(index, 1)\r\n    })\r\n    setHistoryMessages(_historyMessages)\r\n    setSelect([])\r\n    setDeleteDialog(false)\r\n  }\r\n\r\n  return (\r\n    <div className='chat_textarea'>\r\n      <Chip\r\n        className='chat_textarea_hisory'\r\n        variant={history ? 'filled' : 'outlined'}\r\n        label=\"携带历史\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        deleteIcon={<DoneIcon />}\r\n        onDelete={history ? handleHisory : undefined}\r\n        onClick={handleHisory}\r\n      />\r\n      <IconButton className='chat_textarea_delete' aria-label=\"delete\" color=\"error\" onClick={handleDelete}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <TextareaAutosize maxRows='5' className='textarea' maxLength={300} placeholder='发送消息给 AI，ctrl+enter发送消息' value={message} onChange={(e) => setMessage(e.target.value)} />\r\n      <IconButton aria-label=\"delete\" className='icon_btn' onClick={handleSend} disabled={loading}>\r\n        {loading ? <CircularProgress size={24} /> : <SendIcon />}\r\n      </IconButton>\r\n      <DeleteDialog open={deleteDialog} close={() => setDeleteDialog(false)} sure={deleteChat} />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nimport List from './List'\r\nimport Textarea from './Textarea'\r\n\r\nimport './index.less'\r\n\r\n\r\nexport default (): JSX.Element => {\r\n  return (\r\n    <div className='chat'>\r\n      <List />\r\n      <Textarea />\r\n    </div>\r\n  )\r\n}","import React, { useState, useContext } from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\n\r\nimport context from '@/context'\r\n\r\nexport default (): JSX.Element => {\r\n  const { user, setLoginOpen, setUser } = useContext(context)\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [usernameError, setUsernameError] = useState(false)\r\n  const [passwordError, setPasswordError] = useState(false)\r\n\r\n  const handleClose = () => setLoginOpen(false)\r\n\r\n  const handleSubmit = () => {\r\n    if (!username || !password) {\r\n      if (!username) setUsernameError(true)\r\n      if (!password) setPasswordError(true)\r\n      return\r\n    }\r\n    setUser({\r\n      username,\r\n      login: true,\r\n      dialog: false,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth open={user.dialog} onClose={handleClose}>\r\n      <DialogTitle>请先登录您的账户</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          error={usernameError}\r\n          sx={{ mb: 4 }}\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"username\"\r\n          label=\"用户名\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={username}\r\n          onChange={(e) => { setUsername(e.target.value), setUsernameError(false) }}\r\n          helperText={usernameError ? \"请输入用户名\" : \"\"}\r\n        />\r\n        <TextField\r\n          error={passwordError}\r\n          margin=\"dense\"\r\n          id=\"password\"\r\n          label=\"密码\"\r\n          type=\"password\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={password}\r\n          onChange={(e) => { setPassword(e.target.value), setPasswordError(false) }}\r\n          helperText={passwordError ? \"请输入密码\" : \"\"}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>取消</Button>\r\n        <Button onClick={handleSubmit}>登录</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","\r\nimport React, { useState, useRef } from 'react'\r\nimport { CssBaseline, Box, IconButton } from '@mui/material'\r\nimport { ThemeProvider } from '@mui/material/styles'\r\n\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nimport theme from '@/theme'\r\n\r\nimport Context, { GptParams, initGptParams } from '@/context'\r\n\r\nimport useUser from '@/hooks/useUser'\r\nimport useHistory from '@/hooks/useHistory'\r\n\r\nimport Header from '@/components/Header'\r\nimport SideNav from '@/components/SideNav'\r\nimport Chat from '@/components/Chat'\r\n\r\nimport Login from '@/components/Login'\r\n\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nexport default (): JSX.Element => {\r\n  // 侧导航开启状态\r\n  const [openSideNav, setOpenSideNav] = useState(true)\r\n  // 用户状态\r\n  const [user, setUser, setLoginOpen, signOut] = useUser()\r\n  // 吐丝实例\r\n  const snackbarRef = useRef<SnackbarProvider>(null)\r\n  // 问答内容\r\n  const [historyMessages, setHistoryMessages] = useHistory()\r\n  // gpt请求参数\r\n  const [gptParams, setGptParams] = useState<GptParams>(initGptParams)\r\n  // 选中内容\r\n  const [select, setSelect] = useState<number[]>([])\r\n\r\n  return (\r\n    <Context.Provider value={{\r\n      openSideNav,\r\n      setOpenSideNav,\r\n      user,\r\n      setUser,\r\n      setLoginOpen,\r\n      signOut,\r\n      historyMessages,\r\n      setHistoryMessages,\r\n      gptParams,\r\n      setGptParams,\r\n      select,\r\n      setSelect,\r\n    }}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider\r\n          ref={snackbarRef}\r\n          maxSnack={3}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          preventDuplicate={true}\r\n          autoHideDuration={2000}\r\n          action={(snackbarId) => (\r\n            <IconButton color=\"inherit\" onClick={() => snackbarRef.current?.closeSnackbar(snackbarId)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          )} >\r\n          <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <Header />\r\n            <SideNav />\r\n            <Chat />\r\n          </Box>\r\n          <Login />\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Context.Provider>\r\n  )\r\n}\r\n","import 'core-js/es/map'\r\nimport 'core-js/es/set'\r\nimport React from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport App from './App'\r\n\r\nimport './index.less'\r\n\r\nconst rootDom = (document.getElementById('root') as Element)\r\n\r\nconst root = createRoot(rootDom)\r\n\r\nroot.render(<App />)"],"sourceRoot":""}