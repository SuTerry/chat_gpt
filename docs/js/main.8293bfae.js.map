{"version":3,"sources":["webpack://react/./src/theme.ts","webpack://react/./src/context/index.ts","webpack://react/./src/hooks/useUser.ts","webpack://react/./src/hooks/useHistory.ts","webpack://react/./src/constant/layout.ts","webpack://react/./src/components/Header/Dialog.tsx","webpack://react/./src/components/Header/index.tsx","webpack://react/./src/components/SideNav/Dialog.tsx","webpack://react/./src/components/SideNav/SecondMenu.tsx","webpack://react/./src/components/SideNav/ListItems.tsx","webpack://react/./src/components/SideNav/index.tsx","webpack://react/./src/components/Chat/List/index.tsx","webpack://react/./src/api/fetch/types.d.ts","webpack://react/./src/api/fetch/createInit.ts","webpack://react/./src/api/fetch/interceptors_req.ts","webpack://react/./src/api/fetch/timeout.ts","webpack://react/./src/api/fetch/interceptors_res.ts","webpack://react/./src/api/fetch/performOfRes.ts","webpack://react/./src/api/fetch/index.ts","webpack://react/./src/api/ajax/intercept.ts","webpack://react/./src/api/ajax/index.ts","webpack://react/./src/api/config.ts","webpack://react/./src/api/common.ts","webpack://react/./src/api/user.ts","webpack://react/./src/components/Chat/Textarea/Dialog.tsx","webpack://react/./src/components/Chat/Textarea/index.tsx","webpack://react/./src/components/Chat/index.tsx","webpack://react/./src/components/Login/index.tsx","webpack://react/./src/components/Register/index.tsx","webpack://react/./src/App.tsx","webpack://react/./src/main.tsx"],"names":["createTheme","palette","primary","main","appBar","contrastText","components","MuiDrawer","styleOverrides","paper","backgroundColor","initUser","username","login","dialog","userid","initGptParams","chatid","model","topicid","init","openSideNav","setOpenSideNav","user","setUser","setLoginOpen","signOut","historyMessages","setHistoryMessages","gptParams","setGptParams","select","setSelect","registerOpen","setRegisterOpen","createContext","LOCALUSER","LOCALHISTORY","LOGO","open","close","sure","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogActions","Button","onClick","autoFocus","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","useContext","context","useState","outDialog","setOutDialog","color","Toolbar","variant","sx","pr","IconButton","edge","aria-label","marginRight","FormatIndentDecrease","FormatIndentIncrease","Typography","component","noWrap","Box","flexGrow","display","alignItems","justifyContent","Warning","position","top","ml","mr","startIcon","AccountCircle","PersonOutline","DialogContent","DialogContentText","anchorEl","handleClose","clearInterval","nodes","cleanDialog","setCleanDialog","setTopicid","Boolean","Popper","placement","onMouseEnter","onMouseLeave","TransitionProps","Fade","timeout","Paper","map","index","name","children","key","List","ListItem","ListItemText","fontWeight","fontSize","item","ListItemButton","topic","length","Divider","px","bgcolor","boxShadow","py","cursor","list","Icon","TranslateIcon","TerminalIcon","PsychologyAltIcon","setAnchorEl","currentList","setCurrentList","interval","useRef","current","setTimeout","e","childern","clearTimeout","currentTarget","handleEnter","ListItemIcon","style","SecondMenu","Drawer","whiteSpace","height","boxSizing","overflowX","spacing","breakpoints","up","mt","mb","textAlign","ListItems","Method","ResponseType","ChatListRef","useEffect","window","hljs","highlightAll","scrollTo","scrollHeight","behavior","className","ref","role","content","time","classname","Checkbox","i","indexOf","_select","splice","handleCheck","dangerouslySetInnerHTML","__html","marked","parse","createInit","req","method","signal","headers","body","FormData","JSON","stringify","GET","url","parseParams","undefined","params","urlJson","symbol","interceptors_req","carryInterceptorsReq","_interceptors_req","firstReq","shift","reqErr","interceptorsRequestReject","Promise","resolve","interceptorsRequestResolve","reject","Error","controller","AbortController","timeoutInit","_timeout","abort","overtime","promises","fetch","race","interceptors_res","carryInterceptorsRes","res","_interceptors_res","firstRes","resErr","interceptorsResponseReject","interceptorsResponseResolve","setHeaders","fetchHeaders","forEach","value","performOfRes","response","contentType","get","split","status","data","json","blob","ok","error","message","code","reader","getReader","decoder","TextDecoder","stream","ReadableStream","start","pump","read","then","done","text","strs","decode","filter","v","val","includes","enqueue","cpcc_fetch","catch","err","interceptors","request","use","baseURL","baseURLVal","instance","returnType","type","this","apiFetch","POST","API_HOST","postReq","Authorization","Abstract","password","Md5","enqueueSnackbar","useSnackbar","setMessage","loading","setLoading","history","setHistory","deleteDialog","setDeleteDialog","document","addEventListener","keydown","removeEventListener","event","ctrlKey","keyCode","handleSend","preventDefault","messageUser","Date","getTime","messages","arr","push","slice","commonApi","messagesAssistant","readerDone","finally","handleHisory","Chip","label","size","deleteIcon","Done","onDelete","Delete","TextareaAutosize","maxRows","maxLength","placeholder","onChange","target","disabled","CircularProgress","Send","Stack","direction","Link","href","_historyMessages","sort","a","b","Textarea","email","setEmail","setPassword","emailError","setEmailError","passwordError","setPasswordError","TextField","margin","helperText","userApi","sendVerifycode","setUsername","passwordAgain","setPasswordAgain","verifycode","setVerifycode","usernameError","setUsernameError","passwordAgainError","setPasswordAgainError","verifycodeError","setVerifycodeError","timer","setTimer","verifycodeText","setVerifycodeText","handleLogin","localUser","localStorage","getItem","_setUser","setItem","useUser","snackbarRef","localHistory","_setHistory","useHistory","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","preventDuplicate","autoHideDuration","action","snackbarId","closeSnackbar","Close","CssBaseline","Header","SideNav","Chat","Login","Register","rootDom","getElementById","createRoot","render","App"],"mappings":"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","file":"js/main.8293bfae.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\"\n\n\ndeclare module '@mui/material/styles' {\n  interface Palette {\n    appBar: Palette['primary']\n  }\n\n  // allow configuration using `createTheme`\n  interface PaletteOptions {\n    appBar?: PaletteOptions['primary']\n  }\n}\n\ndeclare module '@mui/material/AppBar' {\n  interface AppBarPropsColorOverrides {\n    appBar: true\n  }\n}\n\nexport default createTheme({\n  palette: {\n    primary: {\n      main: '#6d82d0'\n    },\n    appBar: {\n      main: '#3f414e',\n      contrastText: '#fff',\n    },\n  },\n  components: {\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          backgroundColor: '#000020'\n        }\n      }\n    },\n  }\n})","import { createContext } from 'react'\n\nexport interface User {\n  username: string,\n  login: boolean,\n  dialog: boolean,\n  userid: string\n}\n\nexport interface HistoryMessage {\n  role: 'user' | 'assistant'\n  content: string\n  time: number\n}\n\nexport type HistoryMessages = HistoryMessage[]\n\n\nexport interface GptParams {\n  chatid: string\n  model: string\n  topicid: string\n}\n\nexport const initUser: User = {\n  username: '',\n  login: false,\n  dialog: false,\n  userid: '',\n}\n\nexport const initGptParams: GptParams = {\n  chatid: '123',\n  model: 'gpt-3.5-turbo',\n  topicid: '1-01-01',\n}\n\n\n\ninterface Context {\n  openSideNav: boolean\n  setOpenSideNav: (openSideNav: boolean) => void\n  user: User\n  setUser: (user: User) => void\n  setLoginOpen: (open: boolean) => void\n  signOut: () => void\n  historyMessages: HistoryMessages\n  setHistoryMessages: (historyMessage: HistoryMessages) => void\n  gptParams: GptParams\n  setGptParams: (gptParams: GptParams) => void\n  select: number[]\n  setSelect: (select: number[]) => void\n  registerOpen: boolean\n  setRegisterOpen: (open: boolean) => void\n}\n\n// 初始值\nconst init: Context = {\n  openSideNav: true,\n  setOpenSideNav: () => null,\n  user: initUser,\n  setUser: () => null,\n  setLoginOpen: () => null,\n  signOut: () => null,\n  historyMessages: [],\n  setHistoryMessages: () => null,\n  gptParams: initGptParams,\n  setGptParams: () => null,\n  select: [],\n  setSelect: () => null,\n  registerOpen: false,\n  setRegisterOpen: () => null,\n}\n\nexport default createContext<Context>(init)","import { useState } from \"react\"\n\nimport { User, initUser } from '@/context'\n\ntype userUser = [User, (user: User) => void, (open: boolean) => void, () => void]\n\nconst LOCALUSER = 'user'\n\nexport default (): userUser => {\n  const localUser = localStorage.getItem(LOCALUSER)\n  const [user, _setUser] = useState<User>(localUser ? { ...JSON.parse(localUser), dialog: false } : initUser)\n\n  const setUser = (user: User) => {\n    localStorage.setItem(LOCALUSER, JSON.stringify(user))\n    _setUser(user)\n  }\n\n  const setLoginOpen = (open: boolean) => {\n    setUser({ ...user, dialog: open })\n  }\n\n  const signOut = () => {\n    setUser({\n      username: '',\n      login: false,\n      dialog: false,\n      id: '',\n    })\n  }\n\n  return [user, setUser, setLoginOpen, signOut]\n}","import { useState } from \"react\"\n\nimport { HistoryMessages } from '@/context'\n\ntype userUser = [HistoryMessages, (history: HistoryMessages) => void]\n\nconst LOCALHISTORY = 'historys'\n\nexport default (): userUser => {\n  const localHistory = localStorage.getItem(LOCALHISTORY)\n  const [history, _setHistory] = useState<HistoryMessages>(localHistory ? [...JSON.parse(localHistory)] : [])\n\n  const setHistory = (history: HistoryMessages) => {\n    localStorage.setItem(LOCALHISTORY, JSON.stringify(history))\n    _setHistory(history)\n  }\n\n  return [history, setHistory]\n}","export const DRAWERWIDTH = 240\n\nexport const LOGO = 'Chat GPT'","import React from 'react'\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material'\n\ninterface DialogProps {\n  open: boolean\n  close: () => void\n  sure: () => void\n}\n\nexport default ({ open, close, sure }: DialogProps): JSX.Element => {\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"xs\"\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        确定退出登录？\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={close}>取消</Button>\n        <Button onClick={sure} autoFocus>\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}","import React, { useState, useContext } from 'react'\nimport { Typography, Toolbar, IconButton, Box, AppBar as MuiAppBar, Button } from '@mui/material'\n\nimport { styled } from '@mui/material/styles'\n\nimport { DRAWERWIDTH, LOGO } from '@/constant/layout'\n\nimport context from '@/context'\n\nimport OutDialog from './Dialog'\n\nimport FormatIndentDecreaseIcon from '@mui/icons-material/FormatIndentDecrease'\nimport FormatIndentIncreaseIcon from '@mui/icons-material/FormatIndentIncrease'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline'\nimport WarningIcon from '@mui/icons-material/Warning'\n\nimport { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar'\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: DRAWERWIDTH,\n    width: `calc(100% - ${DRAWERWIDTH}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}))\n\nexport default (): JSX.Element => {\n  const { openSideNav, setOpenSideNav, user, setLoginOpen, signOut } = useContext(context)\n\n  const [outDialog, setOutDialog] = useState(false)\n\n  const handleOutLogin = () => {\n    signOut()\n    setOutDialog(false)\n  }\n\n  return (\n    <>\n      <AppBar open={openSideNav} color=\"appBar\">\n        <Toolbar\n          variant=\"dense\"\n          sx={{\n            pr: '24px', // keep right padding when drawer closed\n          }}\n        >\n\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => setOpenSideNav(!openSideNav)}\n            sx={{\n              marginRight: '36px',\n            }}\n          >\n\n            {\n              openSideNav ? <FormatIndentDecreaseIcon /> : <FormatIndentIncreaseIcon />\n            }\n          </IconButton>\n\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n          >\n            {!openSideNav && LOGO}\n          </Typography>\n          <Box\n            sx={{\n              flexGrow: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n\n            <Typography component=\"span\"><WarningIcon sx={{ color: '#fc8800', position: 'relative', top: 2 }} /></Typography>\n            <Typography component=\"span\" sx={{ color: '#ef4444', ml: 1 }}>重要：</Typography>\n            <Typography component=\"span\">为防止网站丢失，请按Ctrl+D收藏本站为书签</Typography>\n          </Box>\n          {\n            user.login\n              ? <>\n                <Typography sx={{ mr: 1 }}>{user.username}</Typography>\n                <Button sx={{ color: '#fff' }} onClick={() => setOutDialog(true)} startIcon={<AccountCircleIcon />} >退出</Button>\n              </>\n              : <Button sx={{ color: '#fff' }} onClick={() => setLoginOpen(true)} startIcon={<PersonOutlineIcon />} >登录</Button>\n          }\n        </Toolbar>\n      </AppBar >\n      <OutDialog open={outDialog} close={() => setOutDialog(false)} sure={handleOutLogin} />\n    </>\n  )\n}","import React from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material'\n\ninterface DialogProps {\n  open: boolean\n  close: () => void\n  sure: () => void\n}\n\nexport default ({ open, close, sure }: DialogProps): JSX.Element => {\n  return (\n    <Dialog\n      fullWidth\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        是否重新发起会话？\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\" sx={{color: '#d32f2f'}}>\n          当前页面内容会被清空，请注意保存关键数据\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close}>取消</Button>\n        <Button onClick={sure} autoFocus>\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}","import React, { useState, useContext } from 'react'\n\n\nimport { Popper, Fade, Paper, Box, List, ListItem, ListItemText, ListItemButton, Divider, Typography } from '@mui/material'\n\nimport context from '@/context'\n\nimport CleanDialog from './Dialog'\n\n\ninterface SecondMenuItem {\n  name: string\n  topic: string\n  children?: SecondMenuItem[]\n}\n\n\nexport type SecondMenuData = SecondMenuItem[]\n\ninterface SecondMenuProps {\n  anchorEl: HTMLElement | null\n  nodes: SecondMenuData\n  handleClose: () => void\n  clearInterval: () => void\n}\n\n\nexport default ({ anchorEl, handleClose, clearInterval, nodes }: SecondMenuProps): JSX.Element => {\n  const { setHistoryMessages, gptParams, setGptParams } = useContext(context)\n\n  const [cleanDialog, setCleanDialog] = useState(false)\n  const [topicid, setTopicid] = useState('')\n\n  const open = Boolean(anchorEl)\n\n  const handleSure = () => {\n    setCleanDialog(false)\n    setHistoryMessages([])\n    setGptParams({ ...gptParams, topicid })\n  }\n\n  const handleTopic = ({ topic }: SecondMenuItem) => {\n    setCleanDialog(true)\n    setTopicid(topic)\n  }\n\n  return (\n    <>\n      <Popper\n        placement=\"right-start\"\n        transition\n        anchorEl={anchorEl}\n        open={open}\n        onMouseEnter={clearInterval}\n        onMouseLeave={handleClose}\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper>\n              {\n                nodes.map(({ name, children }, index) => {\n                  return (\n                    <Box\n                      key={name}\n                      sx={{\n                        width: 200,\n                        backgroundColor: '#f7f7f8',\n                      }}\n                    >\n                      <List component=\"nav\">\n                        <ListItem>\n                          <ListItemText>\n                            <Typography sx={{\n                              fontWeight: 700,\n                              fontSize: 18,\n                              ml: 2,\n                            }}>\n                              • {name}\n                            </Typography>\n                          </ListItemText>\n                        </ListItem>\n                        {\n                          children?.map((item) => {\n                            return (\n                              <ListItemButton key={item.name} onClick={() => handleTopic(item)}>\n                                <Typography sx={{ ml: 3.4 }}>{item.name}</Typography>\n                              </ListItemButton>\n                            )\n                          })\n                        }\n                      </List>\n                      {index < (nodes.length - 1) && <Divider />}\n                    </Box>\n                  )\n                })\n              }\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n      <CleanDialog open={cleanDialog} close={() => setCleanDialog(false)} sure={handleSure} />\n    </>\n  )\n}\n","\nimport React, { useState, useRef } from 'react'\n\nimport { ListItem, ListItemIcon, ListItemText } from '@mui/material'\n\nimport SecondMenu from './SecondMenu'\n\nimport TranslateIcon from '@mui/icons-material/Translate'\nimport TerminalIcon from '@mui/icons-material/Terminal'\nimport PsychologyAltIcon from '@mui/icons-material/PsychologyAlt'\n\nimport type { SecondMenuData } from './SecondMenu'\n\nconst item = {\n  px: 3,\n  color: 'rgba(255, 255, 255, 1)',\n  '&:hover, &:focus': {\n    bgcolor: 'rgba(255, 255, 255, 0.08)',\n  },\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\n  py: 1.5,\n  cursor: 'pointer'\n}\n\nconst list = [\n  {\n    name: '教育',\n    Icon: TranslateIcon,\n    children: [\n      {\n        name: '英语助手',\n        topic: '',\n        children: [\n          {\n            name: '翻译',\n            topic: '1-01-01',\n          },\n          {\n            name: '改写',\n            topic: '1-01-02',\n          },\n        ]\n      },\n      {\n        name: '中文助手',\n        topic: '',\n        children: [\n          {\n            name: '翻译',\n            topic: '1-02-01',\n          },\n          {\n            name: '改写',\n            topic: '1-02-02',\n          },\n        ]\n      },\n    ],\n  },\n  {\n    name: '编程',\n    Icon: TerminalIcon,\n    children: [\n      {\n        name: '通用',\n        topic: '',\n        children: [\n          {\n            name: '代码审查',\n            topic: '2-01-01',\n          },\n        ]\n      },\n      {\n        name: '服务端开发',\n        topic: '',\n        children: [\n          {\n            name: '代码提示',\n            topic: '2-02-01',\n          },\n        ]\n      },\n      {\n        name: '前端开发',\n        topic: '',\n        children: [\n          {\n            name: '代码提示',\n            topic: '2-03-01',\n          },\n        ]\n      },\n      {\n        name: '移动端开发',\n        topic: '',\n        children: [\n          {\n            name: '代码提示',\n            topic: '2-04-01',\n          },\n        ]\n      },\n      {\n        name: '算法',\n        topic: '',\n        children: [\n          {\n            name: '代码提示',\n            topic: '2-05-01',\n          },\n        ]\n      },\n    ],\n  },\n  {\n    name: '内容',\n    Icon: PsychologyAltIcon,\n    children: [],\n  },\n]\n\n\nexport default (): JSX.Element => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [currentList, setCurrentList] = useState<SecondMenuData>([])\n\n  const interval = useRef<NodeJS.Timeout | null>(null)\n\n  const handleClose = () => {\n    interval.current = setTimeout(() => {\n      setAnchorEl(null)\n      setCurrentList([])\n    }, 100)\n  }\n\n  const handleEnter = (e: React.MouseEvent<HTMLLIElement, MouseEvent>, childern: SecondMenuData) => {\n    if (interval.current) clearTimeout(interval.current)\n    if (e.currentTarget !== anchorEl) setAnchorEl(null)\n    setAnchorEl(e.currentTarget)\n    setCurrentList(childern)\n  }\n\n  const clearInterval = () => interval.current && clearTimeout(interval.current)\n\n\n  return (\n    <>\n      {\n        list.map(({ Icon, name, children }, index) => (\n          <ListItem\n            key={index}\n            onMouseEnter={(e) => handleEnter(e, children)}\n            onMouseLeave={handleClose}\n            sx={{ ...item }}\n          >\n            <ListItemIcon>\n              <Icon style={{ color: '#fff' }} />\n            </ListItemIcon>\n            <ListItemText primary={name} />\n          </ListItem>\n        ))\n      }\n      <SecondMenu anchorEl={anchorEl} handleClose={handleClose} clearInterval={clearInterval} nodes={currentList} />\n    </>\n  )\n}","import React, { useContext } from 'react'\n\nimport { Divider, List, Typography, Drawer as MuiDrawer } from '@mui/material'\nimport { styled } from '@mui/material/styles'\n\nimport { DRAWERWIDTH, LOGO } from '@/constant/layout'\n\nimport context from '@/context'\n\nimport ListItems from './ListItems'\n\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      // backgroundColor: '#202123',\n      width: DRAWERWIDTH,\n      height: '100vh',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(0),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(0),\n        },\n      }),\n    },\n  }),\n)\n\nexport default (): JSX.Element => {\n  const { openSideNav } = useContext(context)\n\n  return (\n    <Drawer variant=\"permanent\" open={openSideNav}>\n      <Typography sx={{ mt: 2, mb: 2, textAlign: 'center', color: '#fff' }} variant=\"h6\" component=\"div\">\n        {LOGO}\n      </Typography>\n      <Divider />\n      <List component=\"nav\" sx={{ height: '100vh', position: 'relative' }} >\n        <ListItems />\n      </List>\n    </Drawer>\n  )\n}","import React, { useContext, useRef, useEffect } from 'react'\n\nimport { Checkbox } from '@mui/material'\n\nimport context from '@/context'\n\nimport './index.less'\n\nexport default (): JSX.Element => {\n  const { historyMessages, select, setSelect } = useContext(context)\n\n  const ChatListRef = useRef<HTMLUListElement | null>(null)\n\n  useEffect(() => {\n    window.hljs.highlightAll()\n  }, [])\n\n  useEffect(() => {\n    setTimeout(() => {\n      ChatListRef.current?.scrollTo({ top: ChatListRef.current.scrollHeight, behavior: \"smooth\" })\n    })\n  }, [historyMessages])\n\n  const handleCheck = (index: number) => {\n    const i = select.indexOf(index)\n    if (i > -1) {\n      const _select = [...select]\n      _select.splice(i, 1)\n      setSelect([..._select])\n    } else {\n      setSelect([...select, index])\n    }\n  }\n\n  return (\n    <ul className='chat_list' ref={ChatListRef}>\n      {\n        historyMessages.map(({ role, content, time }, index) => {\n          const classname = role === 'assistant' ? 'assistant' : ''\n          return (\n            <li key={time} className={classname}>\n              <div className='chat_list_box' >\n                <Checkbox className='chat_list_check' sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} onClick={() => handleCheck(index)} />\n                <div dangerouslySetInnerHTML={{ __html: window.marked.parse(content) }}></div>\n              </div>\n            </li>\n          )\n        })\n      }\n      <li className='chat_list_stack'></li>\n    </ul>\n  )\n}","\n\nexport enum Method {\n  'GET' = 'GET',\n  'POST' = 'POST',\n  'PUT' = 'PUT',\n  'DELETE' = 'DELETE',\n}\n\nexport enum ResponseType {\n  'arraybuffer' = 'arraybuffer',\n  'blob' = 'blob',\n  'document' = 'document',\n  'json' = 'json',\n  'text' = 'text',\n  'stream' = 'stream',\n}\n\nexport type FetchHeaders = Record<string, string>\nexport interface ApiFetchRequest {\n  baseURL?: string\n  url: string\n  headers?: Record<string, string>\n  method?: Method\n  // body?: BodyInit | null\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  body?: any\n  signal?: AbortSignal\n}\n\nexport interface FetchRequest extends RequestInit {\n  url: string\n  timeout?: number\n}\nexport interface FetchResponse {\n  url: string\n  headers: FetchHeaders\n  status: number\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any\n}\n\nexport interface CustomResponse<T> {\n  code: number // 返回状态码\n  data: T // 返回数据\n  message: string // 返回提示信息\n}\n\nexport type DataType = {\n  [key: string]: unknown\n}\n\nexport type InterceptorsRequestResolve = (request: RequestInit) => RequestInit | Promise<RequestInit>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InterceptorsRequestReject = (error: any) => any\n\nexport type InterceptorsRequest = {\n  interceptorsRequestResolve: InterceptorsRequestResolve\n  interceptorsRequestReject?: InterceptorsRequestReject\n}\n\nexport type InterceptorsResponseResolve = (response: FetchResponse) => FetchResponse\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InterceptorsResponseReject = (error: any) => any\n\nexport type InterceptorsResponse = {\n  interceptorsResponseResolve: InterceptorsResponseResolve\n  interceptorsResponseReject?: InterceptorsResponseReject\n}\n\nexport type Interceptors = {\n  request: {\n    use: (interceptorsRequestResolve: InterceptorsRequestResolve, interceptorsRequestReject?: InterceptorsRequestReject) => void\n  },\n  response: {\n    use: (interceptorsResponseResolve: InterceptorsResponseResolve, interceptorsResponseReject?: InterceptorsResponseReject) => void\n  },\n}\n\nexport interface CpccFetch {\n  (req: FetchRequest): Promise<FetchResponse>\n  interceptors: Interceptors\n}\n\nexport type TimeoutInit = (init: RequestInit, req: FetchRequest) => ({\n  url: string,\n  timeout: number,\n  controller: AbortController | undefined\n})\n\nexport type Timeout = (init: RequestInit, req: FetchRequest) => Promise<Response>\n\nexport type Overtime = (timeout: number, controller: AbortController | undefined) => Promise<Response>\n","import { FetchRequest, Method } from './types.d'\n\nexport const createInit = (req: FetchRequest): RequestInit => {\n  const { method, signal } = req\n  let headers = req.headers\n  let body = req.body\n\n  // 是否FormData\n  const isFormData = req.body instanceof FormData\n  // 不是FormData时，处理headers、body\n  if (!isFormData) {\n    headers = {\n      'Content-type': 'application/json; charset=UTF-8',\n      ...headers,\n    }\n    if (body) body = JSON.stringify(body)\n  }\n\n  // 处理get\n  if (method === Method.GET) {\n    // get请求时，请求地址添加参数，并清空原body内容\n    if (body) req.url += parseParams(JSON.parse(body as string))\n    // 清空原body内容(get请求不能有body体)\n    body = undefined\n  }\n\n  return { method, headers, body, signal }\n}\n\n/**\n * 格式化url传参格式\n * @param params 需要传入的参数\n * @returns 返回格式化后的字符串\n */\nfunction parseParams<T>(params: T): string {\n  let urlJson = '?'\n  if (typeof params === 'object') {\n    for (const key in params) {\n      if (typeof params[key] === 'object') {\n        urlJson += parseParams(params[key])\n      } else {\n        const symbol = urlJson.length > 1 ? '&' : ''\n        // 非空时才添加\n        if (params[key]) {\n          urlJson += symbol + key + '=' + params[key]\n        }\n      }\n    }\n  }\n  return urlJson\n}\n","import { InterceptorsRequest } from './types.d'\n\n// 定义用来存储拦截请求的处理函数集合\nexport const interceptors_req: InterceptorsRequest[] = []\n\ntype CarryInterceptorsReq = (init: RequestInit) => Promise<RequestInit>\n\n// 执行请求前的拦截器\nexport const carryInterceptorsReq: CarryInterceptorsReq = async init => {\n  // 创建私有的拦截器集合\n  const _interceptors_req = [...interceptors_req]\n  // 第一个拦截器\n  let firstReq: InterceptorsRequest\n  // 请求错误信息\n  let reqErr: string | undefined\n\n  while (_interceptors_req.length > 0) {\n    // 当请求拦截器有值时，获取当前第一个拦截器\n    firstReq = _interceptors_req.shift() as InterceptorsRequest\n    // 开始尝试调用拦截器\n    try {\n      if (reqErr) {\n        // 当有请求错误信息时，直接调用error的方法\n        if (firstReq.interceptorsRequestReject) firstReq.interceptorsRequestReject(reqErr)\n      } else {\n        // 获取当前拦截器返回的init\n        init = await Promise.resolve(firstReq.interceptorsRequestResolve(init))\n      }\n    } catch (error) {\n      // 失败时，有reject函数时调用，并把error传出去\n      if (firstReq.interceptorsRequestReject) firstReq.interceptorsRequestReject(error)\n      // 请求错误信息没有值的时候为其赋值\n      if (!reqErr) reqErr = error as string\n    }\n  }\n  // 当有请求错误信息时，返回reject\n  if (reqErr) return Promise.reject(new Error(reqErr))\n  // 拦截器成功时，返回更改后的init\n  return init\n}\n","\nimport { Timeout, TimeoutInit, Overtime } from './types.d'\n\n/**\n * 超时需要用到的数据\n * @param init fetch的选项\n * @param req 私有fetch入参\n * @returns url：接口地址；timeout：超时时间；controller：接口控制器\n */\nconst timeoutInit: TimeoutInit = (init, req) => {\n  const { url, signal, timeout = 16000 } = req\n  let controller: AbortController | undefined\n\n  if (!signal) {\n    controller = new AbortController()\n    init.signal = controller.signal\n  }\n\n  return { url, timeout, controller }\n}\n\n/**\n * 超时方法\n * @param timeout 超时时间\n * @param controller 接口控制器\n * @returns\n */\nconst overtime: Overtime = (timeout, controller) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (controller) controller.abort()\n      reject(new Error(`timeout of${timeout}ms exceeded`))\n    }, timeout)\n  })\n}\n\nexport const timeout: Timeout = (init, req) => {\n  // 获取url和接口控制器\n  const { url, timeout, controller } = timeoutInit(init, req)\n  // 超时方法\n  const _timeout = overtime(timeout, controller)\n\n  const promises = [fetch(url, init), _timeout]\n\n  return Promise.race(promises)\n}\n","\nimport { InterceptorsResponse, FetchResponse } from './types.d'\n\n// 定义用来拦截响应结果的处理函数集合\nexport const interceptors_res: InterceptorsResponse[] = []\n\ntype CarryInterceptorsRes = (init: FetchResponse) => Promise<FetchResponse>\n\nexport const carryInterceptorsRes: CarryInterceptorsRes = async res => {\n  // 创建私有的拦截器集合\n  const _interceptors_res = [...interceptors_res]\n  // 第一个拦截器\n  let firstRes: InterceptorsResponse\n  // 返回结果错误信息\n  let resErr: string | undefined\n\n  while (_interceptors_res.length > 0) {\n    // 当请求拦截器有值时，获取当前第一个拦截器\n    firstRes = _interceptors_res.shift() as InterceptorsResponse\n    // 开始尝试调用拦截器\n    try {\n      if (resErr) {\n        // 当有返回结果错误信息时，直接调用error的方法\n        if (firstRes.interceptorsResponseReject) firstRes.interceptorsResponseReject(resErr)\n      } else {\n        // 获取当前拦截器返回的init\n        res = await Promise.resolve(firstRes.interceptorsResponseResolve(res))\n      }\n    } catch (error) {\n      // 失败时，有reject函数时调用，并把error传出去\n      if (firstRes.interceptorsResponseReject) firstRes.interceptorsResponseReject(error)\n      // 返回结果错误信息没有值的时候为其赋值\n      if (!resErr) resErr = error as string\n    }\n  }\n  // 当有返回结果错误信息时，返回reject\n  if (resErr) return Promise.reject(new Error(resErr))\n  // 拦截器成功时，返回更改后的init\n  return res\n}\n","import { FetchHeaders, FetchResponse } from './types.d'\n\n/**\n * 设置headers\n * @param headers 原生的Headers\n * @returns 自定义Headers对象\n */\nconst setHeaders = (headers: Headers): FetchHeaders => {\n  const fetchHeaders: FetchHeaders = {}\n  headers.forEach((value, key) => {\n    fetchHeaders[key] = value\n  })\n  return fetchHeaders\n}\n\n/**\n * 预设\n * @param response 原生的Response\n * @returns 自定义Response对象\n *\n */\nexport const performOfRes = async (\n  response: Response\n): Promise<FetchResponse> => {\n  const contentType = (response.headers.get('Content-Type') as string).split(\n    ';'\n  )[0]\n\n  const res: FetchResponse = {\n    url: response.url,\n    headers: setHeaders(response.headers),\n    status: response.status,\n    data: null,\n  }\n\n  switch (contentType) {\n    // json类型\n    case 'application/json':\n      res.data = await response.json()\n      break\n    // 下载\n    case 'application/octet-stream':\n      res.data = await response.blob()\n      break\n    // 流\n    case 'text/event-stream':\n      // res.data = response.body?.getReader()\n      if (!response.ok) {\n        const { error } = await response.json()\n        throw new Error(error.message || error.code)\n      }\n      const reader = response.body?.getReader()\n\n      const decoder = new TextDecoder(\"utf-8\")\n      const stream = new ReadableStream({\n        start(controller) {\n          return pump()\n          function pump(): Promise<ReadableStream<Uint8Array> | undefined> | undefined {\n            return reader?.read().then(({ done, value }) => {\n\n              if (done) {\n                controller.close()\n                return\n              }\n\n              let text = \"\"\n              const str = decoder.decode(value)\n              const strs = str.split(\"data:\").filter((v) => v)\n              for (let i = 0; i < strs.length; i++) {\n                const val = strs[i]\n                if (val.includes(\"[DONE]\")) {\n                  controller.close()\n                  return\n                }\n                \n\n                const data = JSON.parse(val)\n                // data.choices[0].delta.content &&\n                //   (text += data.choices[0].delta.content)\n                data.content && (text += data.content)\n              }\n              controller.enqueue(text)\n              return pump()\n            })\n          }\n        },\n      })\n      res.data = stream\n      break\n    default:\n      break\n  }\n\n  return res\n}\n","import { CpccFetch, FetchResponse } from './types.d'\nimport { createInit } from './createInit'\nimport { interceptors_req, carryInterceptorsReq } from './interceptors_req'\nimport { timeout } from './timeout'\nimport { interceptors_res, carryInterceptorsRes } from './interceptors_res'\nimport { performOfRes } from './performOfRes'\n\n// 定义要获取的资源。这可能是：一个 USVString 字符串，包含要获取资源的 URL。一些浏览器会接受 blob: 和 data: 作为 schemes.一个 Request 对象。\nconst cpcc_fetch: CpccFetch = async (req) => {\n  // 创建fetch入参\n  let init = createInit(req)\n\n  // interceptors_req是拦截请求的拦截处理函数集合\n  try {\n    init = await carryInterceptorsReq(init)\n  } catch (error) {\n    return Promise.reject(new Error(error as string))\n  }\n\n  return new Promise<FetchResponse>((resolve, reject) => {\n    // 设置超时\n    const fetch = timeout(init, req)\n    fetch.then(async response => {\n      // 通过预设获取自定义类型的Response\n      let res = await performOfRes(response)\n      // interceptors_res是拦截响应结果的拦截处理函数集合\n      try {\n        res = await carryInterceptorsRes(res)\n      } catch (error) {\n        return Promise.reject(new Error(error as string))\n      }\n      // 将拦截器处理后的响应结果resolve出去\n      resolve(res)\n    }).catch(err => {\n      reject(err)\n    })\n  })\n}\n\ncpcc_fetch.interceptors = {\n  request: {\n    use: (interceptorsRequestResolve, interceptorsRequestReject?) => {\n      interceptors_req.push({ interceptorsRequestResolve, interceptorsRequestReject })\n    }\n  },\n  response: {\n    use: function (interceptorsResponseResolve, interceptorsResponseReject) {\n      interceptors_res.push({ interceptorsResponseResolve, interceptorsResponseReject })\n    }\n  }\n}\n\nexport default cpcc_fetch\n","import cpcc_fetch from '@/api/fetch'\n\n\n// 添加一个请求拦截器\ncpcc_fetch.interceptors.request.use((request) => {\n  return request\n})\n\n// 添加一个响应拦截器\ncpcc_fetch.interceptors.response.use((response) => {\n  return response\n})\n\nexport default cpcc_fetch\n","\nimport instance from './intercept'\nimport { ApiFetchRequest, Method } from '@/api/fetch/types.d'\n\n\nclass Abstract {\n  protected baseURL = ''\n\n  private apiFetch<T>({\n    baseURL,\n    url,\n    headers,\n    method,\n    body,\n  }: ApiFetchRequest): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const baseURLVal = baseURL || this.baseURL\n      url = baseURLVal + url\n      instance({\n        url,\n        headers,\n        method,\n        body,\n      })\n        .then((response) => {\n          const contentType = (response.headers['content-type'] as string)\n          const res = response.data\n          const returnType = res.type\n          const returnCode = res.code\n\n          if (returnCode === 0) {\n            // 成功\n            return resolve(res)\n          } else if (returnType === 'application/octet-stream') {\n            // 成功\n            return resolve(res)\n          // } else if (contentType === 'text/event-stream') {\n          } else if (contentType === 'text/event-stream; charset=utf-8') {\n            return resolve(res)\n          } else {\n            return reject(new Error(res.message))\n          }\n        })\n        .catch((err) => {\n          const message = err?.data?.message || err?.message || url + '请求失败'\n          reject(new Error(message))\n        })\n    })\n  }\n\n  /**\n   * GET类型的网络请求\n   */\n  protected getReq<T>({\n    baseURL,\n    url,\n    headers,\n    body,\n  }: ApiFetchRequest): Promise<T> {\n    return this.apiFetch({ baseURL, url, headers, method: Method.GET, body })\n  }\n\n  /**\n   * POST类型的网络请求\n   */\n  protected postReq<T>({\n    baseURL,\n    url,\n    headers,\n    body,\n  }: ApiFetchRequest): Promise<T> {\n    return this.apiFetch({ baseURL, url, headers, method: Method.POST, body })\n  }\n}\n\nexport default Abstract\n","// 运行环境变量\nconst env = process.env.WEB_ENV\n\n// 接口域名\nexport const API_HOST =\n  // 生产\n  (env === 'pro') ? ''\n    // 预生产\n    : (env === 'pre' ? ''\n      // 测试\n      : (env === 'sit' ? ''\n        // 开发\n        : (env === 'dev' ? '//chatnwork.com:8080'\n          // 本地\n          : '//chatnwork.com:8080')))","\n\n/***\n * @description 公用API\n */\n\nimport Abstract from '@/api/ajax/index'\n\nimport { API_HOST } from '@/api/config'\n\nclass Common extends Abstract {\n  baseURL = API_HOST\n\n  /**\n   * gpt\n   * @returns\n   */\n  chat(body: unknown) {\n    const url = 'https://api.openai.com/v1/chat/completions'\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer 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`,\n    }\n    return this.postReq<ReadableStream<Uint8Array>>({ url, body, headers })\n  }\n\n  openai(body: unknown) {\n    const url = '/openai-api-stream'\n    return this.postReq<ReadableStream<Uint8Array>>({ url, body })\n  }\n}\n\n// 单列模式返回对象\nlet instance\nexport default (() => {\n  if (instance) return instance\n  instance = new Common()\n  return instance\n})()\n","/***\n * @description 用户API\n */\n\nimport { Md5 } from 'ts-md5'\n\nimport Abstract from '@/api/ajax/index'\n\nimport { API_HOST } from '@/api/config'\n\ninterface LoginParams {\n  email: string\n  password: string\n}\n\ninterface LoginRes {\n  code: number\n  message: string\n  data: {\n    userid: string\n    username: string\n    level: number\n  }\n}\n\ninterface VerifyemailParams {\n  email: string\n}\n\ninterface GeneralRes {\n  code: number\n  message: string\n}\n\ninterface RegisterParams {\n  email: string\n  username: string\n  password: string\n  verifycode: string\n}\n\nclass Common extends Abstract {\n  baseURL = API_HOST\n\n  /**\n   * 登录\n   * @returns\n   */\n  login(body: LoginParams) {\n    const url = '/login'\n    body.password = Md5.hashStr(body.password)\n    return this.postReq<LoginRes>({ url, body })\n  }\n  /**\n   * 发送邮箱验证码\n   * @returns\n   */\n  verifyemail(body: VerifyemailParams) {\n    const url = '/verifyemail'\n    return this.postReq<GeneralRes>({ url, body })\n  }\n  /**\n   * 注册\n   * @returns\n   */\n  register(body: RegisterParams) {\n    const url = '/register'\n    body.password = Md5.hashStr(body.password)\n    return this.postReq<GeneralRes>({ url, body })\n  }\n}\n\n// 单列模式返回对象\nlet instance\nexport default (() => {\n  if (instance) return instance\n  instance = new Common()\n  return instance\n})()\n","import React from 'react'\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material'\n\ninterface DialogProps {\n  open: boolean\n  close: () => void\n  sure: () => void\n}\n\nexport default ({ open, close, sure }: DialogProps): JSX.Element => {\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"xs\"\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        确定要删除聊天？\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={close}>取消</Button>\n        <Button onClick={sure} autoFocus>\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}","import React, { useState, useContext, useEffect } from 'react'\n\nimport { TextareaAutosize, IconButton, CircularProgress, Chip, Link, Stack } from '@mui/material'\n\nimport { useSnackbar } from 'notistack'\n\nimport { commonApi } from '@/api'\n\nimport context, { HistoryMessage } from '@/context'\n\nimport DeleteDialog from './Dialog'\n\nimport SendIcon from '@mui/icons-material/Send'\nimport DoneIcon from '@mui/icons-material/Done'\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nimport './index.less'\n\nexport default (): JSX.Element => {\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const { user, setLoginOpen, historyMessages, setHistoryMessages, gptParams, select, setSelect } = useContext(context)\n\n  const [message, setMessage] = useState('')\n\n  const [loading, setLoading] = useState(false)\n\n  const [history, setHistory] = useState(true)\n\n  const [deleteDialog, setDeleteDialog] = useState(false)\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keydown)\n    return () => document.removeEventListener('keydown', keydown)\n\n  }, [message])\n\n  const keydown = (event: KeyboardEvent) => {\n    if (event.ctrlKey && event.keyCode === 13) {\n      // ctrl + return 手动触发发送\n      handleSend()\n      event.preventDefault()\n    }\n  }\n\n  const handleSend = () => {\n    if (loading) return\n    if (!message) return enqueueSnackbar('请输入要发送的消息!', { variant: 'warning' })\n    if (!user.login) return setLoginOpen(true)\n\n    setLoading(true)\n\n    const messageUser: HistoryMessage = { role: 'user', content: message, time: new Date().getTime() }\n\n    const messages = []\n\n    setHistoryMessages([...historyMessages, messageUser])\n    setMessage('')\n\n    if (history) {\n      const arr = historyMessages.filter(item => item.role === 'user').map(({ role, content }) => ({ role, content }))\n      messages.push(...arr.slice(-3))\n    }\n\n    commonApi.openai({\n      userid: user.userid,\n      messages: [...messages, { role: 'user', content: message }],\n      ...gptParams,\n    }).then(async res => {\n      \n      const reader = res.getReader()\n      const messagesAssistant: HistoryMessage = { role: 'assistant', content: '', time: new Date().getTime() }\n      let done = false\n      let content = ''\n      setHistoryMessages([...historyMessages, messageUser, messagesAssistant])\n\n      while (!done) {\n        const { value, done: readerDone } = await reader.read()\n        \n        if (value) {\n          content += value\n          setHistoryMessages([...historyMessages, messageUser, { ...messagesAssistant, content }])\n        }\n        done = readerDone\n      }\n    }).finally(() => {\n      setLoading(false)\n      window.hljs.highlightAll()\n    })\n  }\n\n  const handleHisory = () => {\n    if (history) {\n      enqueueSnackbar('当前模式下，发送消息不会携带之前的聊天记录')\n    } else {\n      enqueueSnackbar('当前模式下，发送消息会携带之前的三条聊天记录')\n    }\n    setHistory(!history)\n  }\n\n  const handleDelete = () => {\n    if (select.length === 0) return enqueueSnackbar('请勾选要删除的数据', { variant: 'warning' })\n    setDeleteDialog(true)\n  }\n\n  const deleteChat = () => {\n    const _historyMessages = [...historyMessages]\n\n    select.sort((a, b) => b - a).forEach((index) => {\n      _historyMessages.splice(index, 1)\n    })\n    \n    setHistoryMessages(_historyMessages)\n    setSelect([])\n    setDeleteDialog(false)\n  }\n\n  return (\n    <div className='chat_textarea'>\n      <Chip\n        className='chat_textarea_hisory'\n        variant={history ? 'filled' : 'outlined'}\n        label=\"携带历史\"\n        color=\"primary\"\n        size=\"small\"\n        deleteIcon={<DoneIcon />}\n        onDelete={history ? handleHisory : undefined}\n        onClick={handleHisory}\n      />\n      <IconButton className='chat_textarea_delete' aria-label=\"delete\" color=\"error\" onClick={handleDelete}>\n        <DeleteIcon />\n      </IconButton>\n      <TextareaAutosize maxRows='5' className='textarea' maxLength={300} placeholder='发送消息给 AI，ctrl+enter发送消息' value={message} onChange={(e) => setMessage(e.target.value)} />\n      <IconButton aria-label=\"delete\" className='icon_btn' onClick={handleSend} disabled={loading}>\n        {loading ? <CircularProgress size={24} /> : <SendIcon />}\n      </IconButton>\n      <Stack className='chat_textarea_links' direction=\"row\" spacing={2}>\n        <Link href='#'>隐私政策</Link>\n        <Link href='#'>用户协议</Link>\n      </Stack>\n      <DeleteDialog open={deleteDialog} close={() => setDeleteDialog(false)} sure={deleteChat} />\n    </div>\n  )\n}","import React from 'react'\n\nimport List from './List'\nimport Textarea from './Textarea'\n\nimport './index.less'\n\n\nexport default (): JSX.Element => {\n  return (\n    <div className='chat'>\n      <List />\n      <Textarea />\n    </div>\n  )\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material'\n\nimport { useSnackbar } from 'notistack'\n\nimport { userApi } from '@/api'\n\nimport context from '@/context'\n\nexport default (): JSX.Element => {\n  const { enqueueSnackbar } = useSnackbar()\n\n  const { user, setLoginOpen, setUser, setRegisterOpen } = useContext(context)\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [emailError, setEmailError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n\n  useEffect(() => {\n    setEmail('')\n    setPassword('')\n\n    setEmailError(false)\n    setPasswordError(false)\n  }, [user.dialog])\n\n  const handleClose = () => setLoginOpen(false)\n\n  const handleRegister = () => {\n    handleClose()\n    setRegisterOpen(true)\n  }\n\n  const handleSubmit = () => {\n    if (!email || !password) {\n      if (!email) setEmailError(true)\n      if (!password) setPasswordError(true)\n      return\n    }\n\n    userApi.login({ email, password }).then((res) => {\n      enqueueSnackbar(res.message, { variant: 'success' })\n      const {username, userid} = res.data\n      setUser({\n        userid,\n        username,\n        login: true,\n        dialog: false,\n      })\n    }).catch((err)=> {\n      enqueueSnackbar(err, { variant: 'error' })\n    })\n  }\n\n  return (\n    <Dialog fullWidth open={user.dialog} onClose={handleClose}>\n      <DialogTitle>请先登录您的账户</DialogTitle>\n      <DialogContent>\n        <TextField\n          error={emailError}\n          sx={{ mb: 4 }}\n          autoFocus\n          margin=\"dense\"\n          id=\"email\"\n          label=\"邮箱\"\n          fullWidth\n          variant=\"outlined\"\n          value={email}\n          onChange={(e) => { setEmail(e.target.value), setEmailError(false) }}\n          helperText={emailError ? \"请输入邮箱\" : \"\"}\n        />\n        <TextField\n          error={passwordError}\n          margin=\"dense\"\n          id=\"password\"\n          label=\"密码\"\n          type=\"password\"\n          fullWidth\n          variant=\"outlined\"\n          value={password}\n          onChange={(e) => { setPassword(e.target.value), setPasswordError(false) }}\n          helperText={passwordError ? \"请输入密码\" : \"\"}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button sx={{ mr: 'auto', ml: 1.5 }} onClick={handleRegister}>注册账户</Button>\n        <Button onClick={handleClose}>取消</Button>\n        <Button onClick={handleSubmit}>登录</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react'\n\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n} from '@mui/material'\n\nimport { useSnackbar } from 'notistack'\n\nimport { userApi } from '@/api'\n\nimport context from '@/context'\n\nconst sendVerifycode = '发送验证码'\nconst timering = '后再次发送'\nconst timerNum = 60\n\nexport default (): JSX.Element => {\n  const { enqueueSnackbar } = useSnackbar()\n\n  const { registerOpen, setRegisterOpen, setLoginOpen } = useContext(context)\n\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordAgain, setPasswordAgain] = useState('')\n  const [verifycode, setVerifycode] = useState('')\n\n  const [usernameError, setUsernameError] = useState(false)\n  const [emailError, setEmailError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n  const [passwordAgainError, setPasswordAgainError] = useState(false)\n  const [verifycodeError, setVerifycodeError] = useState(false)\n\n  const [timer, setTimer] = useState(timerNum)\n  const [verifycodeText, setVerifycodeText] = useState(sendVerifycode)\n\n  useEffect(() => {\n    setUsername('')\n    setEmail('')\n    setPassword('')\n    setPasswordAgain('')\n    setVerifycode('')\n\n    setUsernameError(false)\n    setEmailError(false)\n    setPasswordError(false)\n    setPasswordAgainError(false)\n    setVerifycodeError(false)\n  }, [registerOpen])\n\n  useEffect(() => {\n    if (timer === timerNum) return\n    setVerifycodeText(timer + timering)\n    if (timer === 0)\n      return setTimer(timerNum), setVerifycodeText(sendVerifycode)\n    setTimeout(() => {\n      setTimer(timer - 1)\n    }, 1000)\n  }, [timer])\n\n  const handleClose = () => setRegisterOpen(false)\n\n  const handleLogin = () => {\n    handleClose()\n    setLoginOpen(true)\n  }\n\n  const handleVerifycode = () => {\n    if (!email) return setEmailError(true)\n\n    userApi\n      .verifyemail({ email })\n      .then((res) => {\n        enqueueSnackbar(res.message, { variant: 'success' })\n        setTimer(59)\n      })\n      .catch((err) => {\n        enqueueSnackbar(err, { variant: 'error' })\n      })\n  }\n\n  const handleSubmit = () => {\n    if (!username || !email || !password || !passwordAgain || !verifycode) {\n      if (!username) setUsernameError(true)\n      if (!email) setPasswordError(true)\n      if (!password) setPasswordError(true)\n      if (!passwordAgain) setPasswordAgainError(true)\n      if (!verifycode) setVerifycodeError(true)\n      return\n    }\n\n    if (username.length < 2 || username.length > 33)\n      return enqueueSnackbar('用户名需要大于2位小于33位!', {\n        variant: 'warning',\n      })\n    if (password.length < 7 || password.length > 65)\n      return enqueueSnackbar('密码需要大于7位小于65位!', { variant: 'warning' })\n    if (password !== passwordAgain)\n      return enqueueSnackbar('两次密码不一致!', { variant: 'warning' })\n\n    userApi.register({ email, username, password, verifycode }).then((res) => {\n      enqueueSnackbar(res.message, { variant: 'success' })\n      handleLogin()\n    }).catch((err) => {\n      enqueueSnackbar(err, { variant: 'error' })\n    })\n  }\n\n  return (\n    <Dialog fullWidth open={registerOpen} onClose={handleClose}>\n      <DialogTitle>请您注册的账户</DialogTitle>\n      <DialogContent>\n        <TextField\n          error={emailError}\n          sx={{ mb: 2 }}\n          autoFocus\n          margin=\"dense\"\n          id=\"email\"\n          label=\"邮箱\"\n          fullWidth\n          variant=\"outlined\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value), setEmailError(false)\n          }}\n          helperText={emailError ? '请输入邮箱' : ''}\n        />\n        <TextField\n          error={usernameError}\n          sx={{ mb: 2 }}\n          margin=\"dense\"\n          id=\"username\"\n          label=\"用户名\"\n          fullWidth\n          variant=\"outlined\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value), setUsernameError(false)\n          }}\n          helperText={usernameError ? '请输入用户名' : ''}\n        />\n        <TextField\n          error={passwordError}\n          sx={{ mb: 2 }}\n          margin=\"dense\"\n          id=\"password\"\n          label=\"密码\"\n          type=\"password\"\n          fullWidth\n          variant=\"outlined\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value), setPasswordError(false)\n          }}\n          helperText={passwordError ? '请输入密码' : ''}\n        />\n        <TextField\n          error={passwordAgainError}\n          sx={{ mb: 2 }}\n          margin=\"dense\"\n          id=\"passwordAgain\"\n          label=\"确认密码\"\n          type=\"password\"\n          fullWidth\n          variant=\"outlined\"\n          value={passwordAgain}\n          onChange={(e) => {\n            setPasswordAgain(e.target.value), setPasswordAgainError(false)\n          }}\n          helperText={passwordAgainError ? '请输再次输入密码' : ''}\n        />\n        <Stack direction=\"row\">\n          <TextField\n            error={verifycodeError}\n            margin=\"dense\"\n            id=\"code\"\n            label=\"邮箱验证码\"\n            fullWidth\n            variant=\"outlined\"\n            value={verifycode}\n            onChange={(e) => {\n              setVerifycode(e.target.value), setVerifycodeError(false)\n            }}\n            helperText={verifycodeError ? '请输再次输入密码' : ''}\n          />\n          <Button\n            disabled={verifycodeText !== sendVerifycode}\n            variant=\"contained\"\n            sx={{ width: 200, margin: '8px 0 4px 16px !important' }}\n            onClick={handleVerifycode}\n          >\n            {verifycodeText}\n          </Button>\n        </Stack>\n      </DialogContent>\n      <DialogActions>\n        <Button sx={{ mr: 'auto', ml: 1.5 }} onClick={handleLogin}>\n          返回登录\n        </Button>\n        <Button onClick={handleClose}>取消</Button>\n        <Button onClick={handleSubmit}>注册</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","\nimport React, { useState, useRef } from 'react'\nimport { CssBaseline, Box, IconButton } from '@mui/material'\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport { SnackbarProvider } from 'notistack'\n\nimport theme from '@/theme'\n\nimport Context, { GptParams, initGptParams } from '@/context'\n\nimport useUser from '@/hooks/useUser'\nimport useHistory from '@/hooks/useHistory'\n\nimport Header from '@/components/Header'\nimport SideNav from '@/components/SideNav'\nimport Chat from '@/components/Chat'\nimport Login from '@/components/Login'\nimport Register from '@/components/Register'\n\nimport CloseIcon from '@mui/icons-material/Close'\n\nexport default (): JSX.Element => {\n  // 侧导航开启状态\n  const [openSideNav, setOpenSideNav] = useState(true)\n  // 用户状态\n  const [user, setUser, setLoginOpen, signOut] = useUser()\n  // 注册弹窗\n  const [registerOpen, setRegisterOpen] = useState(false)\n  // 吐丝实例\n  const snackbarRef = useRef<SnackbarProvider>(null)\n  // 问答内容\n  const [historyMessages, setHistoryMessages] = useHistory()\n  // gpt请求参数\n  const [gptParams, setGptParams] = useState<GptParams>(initGptParams)\n  // 选中内容\n  const [select, setSelect] = useState<number[]>([])\n\n  return (\n    <Context.Provider value={{\n      openSideNav,\n      setOpenSideNav,\n      user,\n      setUser,\n      setLoginOpen,\n      signOut,\n      historyMessages,\n      setHistoryMessages,\n      gptParams,\n      setGptParams,\n      select,\n      setSelect,\n      registerOpen,\n      setRegisterOpen,\n    }}>\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider\n          ref={snackbarRef}\n          maxSnack={3}\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          preventDuplicate={true}\n          autoHideDuration={2000}\n          action={(snackbarId) => (\n            <IconButton color=\"inherit\" onClick={() => snackbarRef.current?.closeSnackbar(snackbarId)}>\n              <CloseIcon />\n            </IconButton>\n          )} >\n          <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <Header />\n            <SideNav />\n            <Chat />\n          </Box>\n          <Login />\n          <Register />\n        </SnackbarProvider>\n      </ThemeProvider>\n    </Context.Provider>\n  )\n}\n","import 'core-js/es/map'\nimport 'core-js/es/set'\nimport React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App'\n\nimport './index.less'\n\nconst rootDom = (document.getElementById('root') as Element)\n\nconst root = createRoot(rootDom)\n\nroot.render(<App />)"],"sourceRoot":""}